{"version":3,"sources":["utils/input/input.js","utils/icons/icons.js","components/cattery/addParty/timeKeeper.js","components/cattery/addParty/addParty.js","components/cattery/editParty/editParty.js","components/cattery/listOfParties/partyCard/partyCard.js","components/cattery/listOfParties/listOfParties.js","components/cattery/partySizeAvailability/partySizeRow/partySizeRow.js","components/cattery/partySizeAvailability/partySizeAvailability.js","utils/modal/modal.js","components/cattery/cattery.js","App.js","serviceWorker.js","index.js"],"names":["Input","props","className","label","onChange","style","id","class","type","value","placeholder","checkMark","xmlns","aria-hidden","focusable","data-prefix","data-icon","fill","d","dollarSign","role","viewBox","clockIcon","usersIcon","plusIcon","pencil","TimePicker","state","isOpen","timeStart","timeEnd","handleUpdateTime","time","endMeridiem","console","log","formatted","toString","toUpperCase","hour","endTime","minute","slice","setState","toggleOpenTimeKeeper","updateData","handleUpdateReservation","editContainer","this","onClick","timePickerContainer","newTime","Component","AddParty","name","description","numberInParty","paid","reservationTime","isReservation","isUpcomingReservation","isOverdue","reservationIsReady","addParty","party","numOfNewPeople","updateCurrentPartyLists","data","handleUpdateNumOfPeople","num","onInputChange","e","target","inputs","document","querySelectorAll","forEach","input","checked","startTime","moment","format","add","Math","random","pasrtyDescription","htmlFor","partyName","partyType","partyPayment","partyNum","for","width","height","cx","cy","r","valuename","disabled","selected","EditParty","handleSubmit","updatePartyData","partyId","handleEditModalToggle","PartyCard","timeRemaining","isPaid","handleStartCountdown","interval","setInterval","widthAmt","calcCurrentNumOfSpotsLeft","countDownSpeed","handleButtonClick","handleUpdateTimes","onClick_checkReservation","onClick_remove","handleIsPaidToggle","handleFill","clearInterval","backgroundColor","color","ListOfParties","peopleList","listArray","map","key","title","currentOccupancy","PartySizeRow","isAvailable","nextAvailableTime","checkIfAvailable","currentParty","partySize","currentParties","listOfParties","getNextAvailableTime","PartySizeAvailability","partyRows","Array","from","x","i","currentTime","Modal","modalContent","click","children","ReactDOM","createPortal","getElementById","Cattery","modalIsOpen","currentNumOfReservations","currentNumOfUpcomingReservations","currentNumOverdue","totalGuests","selectedPartyId","endTimes","listOfReservations","isEditMode","getCurrentTime","length","handleMoveParty","currentTimePlus1","handleGetTimeStartTimeEnd","newTimes","filter","handleModalToggle","handleRemoveParty","numInParty","updatedParties","currentListArray","listDestinationArray","filteredParty","p","filteredCurrentListArray","newlistDestinationArray","Number","handleCheckReservation","newReservationList","newPartyList","numOfUpcoming","targetKey","getActiveParty","p1","p2","currentPartyId","handleTestMode","filteredNumOfSpotsLeft__LIST","numOfOverdue","getNumPeopleInList","array","numOfPeopleInList","addUser","upcomingTag","header","modal","addPartyBtn","App","Boolean","window","location","hostname","match","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2942fd97.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Input = props => {\r\n\treturn (\r\n\t\t<div className=\"input-container\">\r\n\t\t\t<label>{props.label}</label>\r\n\t\t\t<input\r\n\t\t\t\tonChange={props.onChange}\r\n\t\t\t\tstyle={props.style}\r\n\t\t\t\tid={props.id}\r\n\t\t\t\tclassName={props.class}\r\n\t\t\t\ttype={props.type}\r\n\t\t\t\tvalue={props.value}\r\n\t\t\t\tplaceholder={props.placeholder}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nexport const checkMark = (\r\n\t<svg\r\n\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\tclassName=\"checkmark\"\r\n\t\taria-hidden=\"true\"\r\n\t\tfocusable=\"false\"\r\n\t\tdata-prefix=\"fas\"\r\n\t\tdata-icon=\"check\"\r\n\t\tclassName=\"svg-inline--fa fa-check fa-w-16\"\r\n\t\trole=\"img\"\r\n\t\tviewBox=\"0 0 512 512\"\r\n\t>\r\n\t\t<path\r\n\t\t\tfill=\"currentColor\"\r\n\t\t\td=\"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\"\r\n\t\t/>\r\n\t</svg>\r\n);\r\n\r\nexport const edit = (\r\n\t<svg\r\n\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\taria-hidden=\"true\"\r\n\t\tfocusable=\"false\"\r\n\t\tdata-prefix=\"far\"\r\n\t\tdata-icon=\"edit\"\r\n\t\tclassName=\"svg-inline--fa fa-edit fa-w-18\"\r\n\t\trole=\"img\"\r\n\t\tviewBox=\"0 0 576 512\"\r\n\t>\r\n\t\t<path\r\n\t\t\tfill=\"currentColor\"\r\n\t\t\td=\"M402.3 344.9l32-32c5-5 13.7-1.5 13.7 5.7V464c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h273.5c7.1 0 10.7 8.6 5.7 13.7l-32 32c-1.5 1.5-3.5 2.3-5.7 2.3H48v352h352V350.5c0-2.1.8-4.1 2.3-5.6zm156.6-201.8L296.3 405.7l-90.4 10c-26.2 2.9-48.5-19.2-45.6-45.6l10-90.4L432.9 17.1c22.9-22.9 59.9-22.9 82.7 0l43.2 43.2c22.9 22.9 22.9 60 .1 82.8zM460.1 174L402 115.9 216.2 301.8l-7.3 65.3 65.3-7.3L460.1 174zm64.8-79.7l-43.2-43.2c-4.1-4.1-10.8-4.1-14.8 0L436 82l58.1 58.1 30.9-30.9c4-4.2 4-10.8-.1-14.9z\"\r\n\t\t/>\r\n\t</svg>\r\n);\r\n\r\nexport const dollarSign = (\r\n\t<svg\r\n\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\taria-hidden=\"true\"\r\n\t\tfocusable=\"false\"\r\n\t\tdata-prefix=\"fas\"\r\n\t\tdata-icon=\"dollar-sign\"\r\n\t\tclassName=\"svg-inline--fa fa-dollar-sign fa-w-9\"\r\n\t\trole=\"img\"\r\n\t\tviewBox=\"0 0 288 512\"\r\n\t>\r\n\t\t<path\r\n\t\t\tfill=\"currentColor\"\r\n\t\t\td=\"M209.2 233.4l-108-31.6C88.7 198.2 80 186.5 80 173.5c0-16.3 13.2-29.5 29.5-29.5h66.3c12.2 0 24.2 3.7 34.2 10.5 6.1 4.1 14.3 3.1 19.5-2l34.8-34c7.1-6.9 6.1-18.4-1.8-24.5C238 74.8 207.4 64.1 176 64V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48h-2.5C45.8 64-5.4 118.7.5 183.6c4.2 46.1 39.4 83.6 83.8 96.6l102.5 30c12.5 3.7 21.2 15.3 21.2 28.3 0 16.3-13.2 29.5-29.5 29.5h-66.3C100 368 88 364.3 78 357.5c-6.1-4.1-14.3-3.1-19.5 2l-34.8 34c-7.1 6.9-6.1 18.4 1.8 24.5 24.5 19.2 55.1 29.9 86.5 30v48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-48.2c46.6-.9 90.3-28.6 105.7-72.7 21.5-61.6-14.6-124.8-72.5-141.7z\"\r\n\t\t/>\r\n\t</svg>\r\n);\r\n\r\nexport const clockIcon = (\r\n\t<svg\r\n\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\taria-hidden=\"true\"\r\n\t\tfocusable=\"false\"\r\n\t\tdata-prefix=\"far\"\r\n\t\tdata-icon=\"clock\"\r\n\t\tclassName=\"svg-inline--fa fa-clock fa-w-16\"\r\n\t\trole=\"img\"\r\n\t\tviewBox=\"0 0 512 512\"\r\n\t>\r\n\t\t<path\r\n\t\t\tfill=\"currentColor\"\r\n\t\t\td=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z\"\r\n\t\t/>\r\n\t</svg>\r\n);\r\n\r\nexport const usersIcon = (\r\n\t<svg\r\n\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\taria-hidden=\"true\"\r\n\t\tfocusable=\"false\"\r\n\t\tdata-prefix=\"fas\"\r\n\t\tdata-icon=\"user-friends\"\r\n\t\tclassName=\"svg-inline--fa fa-user-friends fa-w-20\"\r\n\t\trole=\"img\"\r\n\t\tviewBox=\"0 0 640 512\"\r\n\t>\r\n\t\t<path\r\n\t\t\tfill=\"currentColor\"\r\n\t\t\td=\"M192 256c61.9 0 112-50.1 112-112S253.9 32 192 32 80 82.1 80 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C51.6 288 0 339.6 0 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zM480 256c53 0 96-43 96-96s-43-96-96-96-96 43-96 96 43 96 96 96zm48 32h-3.8c-13.9 4.8-28.6 8-44.2 8s-30.3-3.2-44.2-8H432c-20.4 0-39.2 5.9-55.7 15.4 24.4 26.3 39.7 61.2 39.7 99.8v38.4c0 2.2-.5 4.3-.6 6.4H592c26.5 0 48-21.5 48-48 0-61.9-50.1-112-112-112z\"\r\n\t\t/>\r\n\t</svg>\r\n);\r\n\r\nexport const plusIcon = (\r\n\t<svg\r\n\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\taria-hidden=\"true\"\r\n\t\tfocusable=\"false\"\r\n\t\tdata-prefix=\"fas\"\r\n\t\tdata-icon=\"plus\"\r\n\t\tclassName=\"svg-inline--fa fa-plus fa-w-14\"\r\n\t\trole=\"img\"\r\n\t\tviewBox=\"0 0 448 512\"\r\n\t>\r\n\t\t<path\r\n\t\t\tfill=\"currentColor\"\r\n\t\t\td=\"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"\r\n\t\t/>\r\n\t</svg>\r\n);\r\nexport const pencil = (\r\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"pencil-alt\" class=\"svg-inline--fa fa-pencil-alt fa-w-16\" role=\"img\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z\"/></svg>\r\n);\r\n\r\n//    export const FacebookIcon = props => (\r\n// <svg\r\n// \tid=\"facebook-icon\"\r\n// \taria-hidden=\"true\"\r\n// \tfocusable=\"false\"\r\n// \tdata-prefix=\"fab\"\r\n// \tdata-icon=\"facebook-square\"\r\n// \tclassName=\"svg-inline--fa fa-facebook-square fa-w-14\"\r\n// \trole=\"img\"\r\n// \txmlns=\"http://www.w3.org/2000/svg\"\r\n// \tviewBox=\"0 0 448 512\"\r\n// \tstyle={{ fontSize: props.width }}\r\n// >\r\n// \t<path\r\n// \t\tfill=\"currentColor\"\r\n// \t\td=\"M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h137.25V327.69h-63V256h63v-54.64c0-62.15 37-96.48 93.67-96.48 27.14 0 55.52 4.84 55.52 4.84v61h-31.27c-30.81 0-40.42 19.12-40.42 38.73V256h68.78l-11 71.69h-57.78V480H400a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48z\"\r\n// \t/>\r\n// </svg>\r\n// );\r\n\r\nexport default {\r\n\tcheckMark,\r\n\tedit,\r\n\tdollarSign,\r\n\tclockIcon,\r\n\tusersIcon,\r\n\tplusIcon,\r\n\tpencil\r\n};\r\n","import React, { Component } from \"react\";\r\nimport TimeKeeper from \"react-timekeeper\";\r\nimport \"./css/timeKeeperCSS/timeKeeper.css\";\r\nimport { pencil } from \"../../../utils/icons/icons\";\r\n\r\nclass TimePicker extends Component {\r\n  state = {\r\n    isOpen: true,\r\n    timeStart: null,\r\n    timeEnd: null\r\n  };\r\n\r\n  handleUpdateTime = time => {\r\n    console.log(time.formatted.toString().toUpperCase());\r\n    let endMeridiem;\r\n    if (time.hour <= 12) {\r\n      endMeridiem = \" PM\";\r\n    } else {\r\n      endMeridiem = \" PM\";\r\n    }\r\n\r\n    let endTime = `${time.hour + 1}:${(\"0\" + time.minute).slice(\r\n      -2\r\n    )}${endMeridiem}`;\r\n    this.setState({\r\n      timeStart: time.formatted.toString().toUpperCase(),\r\n      // timeStart: time.formatted,\r\n      timeEnd: endTime\r\n    });\r\n  };\r\n\r\n  toggleOpenTimeKeeper = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  };\r\n\r\n  updateData = () => {\r\n    this.props.handleUpdateReservation(this.state);\r\n    this.toggleOpenTimeKeeper();\r\n  };\r\n\r\n  render() {\r\n    const editContainer = (\r\n      <div className=\"edit-container\">\r\n        <span id=\"title\" className=\"reservation-time\">\r\n          Reservation:\r\n        </span>\r\n        <span id=\"time\" className=\"reservation-time\">\r\n          {this.state.timeStart}\r\n        </span>\r\n        <button onClick={this.toggleOpenTimeKeeper} className=\"save-btn\">\r\n          {pencil}\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n    const timePickerContainer = (\r\n      <div className=\"time-picker-container\">\r\n        <TimeKeeper\r\n          time={this.state.timeStart}\r\n          onChange={newTime => this.handleUpdateTime(newTime)}\r\n        />\r\n        <button onClick={this.updateData} className=\"save-btn\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className=\"time-input-container\">\r\n        {this.state.isOpen ? timePickerContainer : editContainer}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimePicker;\r\n","import React, { Component } from \"react\";\r\nimport Input from \"../../../utils/input/input\";\r\nimport TimeKeeper from \"react-timekeeper\";\r\nimport TimePicker from \"./timeKeeper\";\r\nimport { plusIcon } from \"../../../utils/icons/icons\";\r\nimport * as moment from \"moment\";\r\nimport \"./css/addParty.css\";\r\n\r\nclass AddParty extends Component {\r\n  state = {\r\n    id: null,\r\n    name: null,\r\n    description: null,\r\n    numberInParty: 1,\r\n    paid: true,\r\n    timeStart: \"12:00 PM\",\r\n    timeEnd: \"1:00 PM\",\r\n    reservationTime: null,\r\n    isReservation: false,\r\n    isUpcomingReservation: false,\r\n    isOverdue: false,\r\n    reservationIsReady: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    let startTime = moment().format(\"h:mm A\");\r\n    let endTime = moment()\r\n      .add(\"hours\", 1)\r\n      .format(\"h:mm A\");\r\n\r\n    this.setState({\r\n      timeStart: startTime,\r\n      timeEnd: endTime,\r\n      id: Math.random() * 10\r\n    });\r\n  }\r\n\r\n  addParty = (party, numOfNewPeople, isReservation) => {\r\n    this.props.updateCurrentPartyLists(party, numOfNewPeople, isReservation);\r\n  };\r\n\r\n  handleUpdateReservation = data => {\r\n    this.setState({\r\n      timeStart: data.timeStart,\r\n      timeEnd: data.timeEnd\r\n    });\r\n  };\r\n\r\n  handleUpdateNumOfPeople = num => {\r\n    this.setState({ numberInParty: num });\r\n  };\r\n\r\n  onInputChange = e => {\r\n    if (e.target.id === \"numberInParty\") {\r\n      let inputs = document.querySelectorAll(\".btn-radio input\");\r\n      console.log(inputs[2]);\r\n      inputs.forEach(input => (input.checked = false));\r\n    }\r\n    console.log(e.target.id);\r\n    console.log(e.target.value);\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const pasrtyDescription = (\r\n      <div className=\"input-container\">\r\n        <label htmlFor=\"\">\r\n          Description\r\n          <textarea\r\n            onChange={this.onInputChange}\r\n            value={this.state.value}\r\n            id=\"description\"\r\n          />\r\n        </label>\r\n      </div>\r\n    );\r\n\r\n    const partyName = (\r\n      <Input\r\n        className=\"input-container\"\r\n        onChange={this.onInputChange}\r\n        id=\"name\"\r\n        label=\"Party Name:\"\r\n        type=\"text\"\r\n      />\r\n    );\r\n\r\n    const partyType = (\r\n      <div id=\"walkIn-res__container\">\r\n        <span className=\"title\">Party Type</span>\r\n        <div className=\"walkIn-res__wrapper\">\r\n          <span\r\n            onClick={() => this.setState({ isReservation: false })}\r\n            id=\"walk-on\"\r\n            className={`walkIn-res__btn ${\r\n              !this.state.isReservation ? \"active\" : \"\"\r\n            }`}\r\n          >\r\n            Walk-In\r\n          </span>\r\n          <span\r\n            onClick={() => this.setState({ isReservation: true })}\r\n            id=\"reservation\"\r\n            className={`walkIn-res__btn ${\r\n              this.state.isReservation ? \"active\" : \"\"\r\n            }`}\r\n          >\r\n            Reservation\r\n          </span>\r\n        </div>\r\n        {this.state.isReservation ? (\r\n          <TimePicker\r\n            timeStart={this.state.timeStart}\r\n            reservationTime={this.state.reservationTime}\r\n            time={this.state.timeStart}\r\n            handleUpdateReservation={this.handleUpdateReservation}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    );\r\n\r\n    const partyPayment = (\r\n      <div id=\"payment-container\">\r\n        <span className=\"title\">Payment</span>\r\n        <div className=\"walkIn-res__wrapper\">\r\n          <span\r\n            onClick={() => this.setState({ paid: true })}\r\n            id=\"paid__yes\"\r\n            className={`walkIn-res__btn ${this.state.paid ? \"active\" : \"\"}`}\r\n          >\r\n            Paid\r\n          </span>\r\n          <span\r\n            onClick={() => this.setState({ paid: false })}\r\n            id=\"paid__no\"\r\n            className={`walkIn-res__btn ${!this.state.paid ? \"active\" : \"\"}`}\r\n          >\r\n            Not Paid\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const partyNum = (\r\n      <div id=\"num-of-people\" className=\"input-container\">\r\n        <label>Select # of People in Party:</label>\r\n        <div className=\"select-option-container\">\r\n          <div className=\"radio-container\">\r\n            <label\r\n              htmlFor=\"\"\r\n              onClick={() => this.setState({ numberInParty: 1 })}\r\n              for=\"radio-1\"\r\n              className=\"btn-radio\"\r\n            >\r\n              <input type=\"radio\" id=\"radio-1\" name=\"radio-grp\" />\r\n              <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 20 20\">\r\n                <circle cx=\"10\" cy=\"10\" r=\"9\"></circle>\r\n                <path\r\n                  d=\"M10,7 C8.34314575,7 7,8.34314575 7,10 C7,11.6568542 8.34314575,13 10,13 C11.6568542,13 13,11.6568542 13,10 C13,8.34314575 11.6568542,7 10,7 Z\"\r\n                  className=\"inner\"\r\n                ></path>\r\n                <path\r\n                  d=\"M10,1 L10,1 L10,1 C14.9705627,1 19,5.02943725 19,10 L19,10 L19,10 C19,14.9705627 14.9705627,19 10,19 L10,19 L10,19 C5.02943725,19 1,14.9705627 1,10 L1,10 L1,10 C1,5.02943725 5.02943725,1 10,1 L10,1 Z\"\r\n                  className=\"outer\"\r\n                ></path>\r\n              </svg>\r\n              <span>1</span>\r\n            </label>\r\n          </div>\r\n          <div className=\"radio-container\">\r\n            <label\r\n              htmlFor=\"\"\r\n              onClick={() => this.setState({ numberInParty: 2 })}\r\n              for=\"radio-2\"\r\n              className=\"btn-radio\"\r\n            >\r\n              <input type=\"radio\" id=\"radio-2\" name=\"radio-grp\" />\r\n              <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 20 20\">\r\n                <circle cx=\"10\" cy=\"10\" r=\"9\"></circle>\r\n                <path\r\n                  d=\"M10,7 C8.34314575,7 7,8.34314575 7,10 C7,11.6568542 8.34314575,13 10,13 C11.6568542,13 13,11.6568542 13,10 C13,8.34314575 11.6568542,7 10,7 Z\"\r\n                  className=\"inner\"\r\n                ></path>\r\n                <path\r\n                  d=\"M10,1 L10,1 L10,1 C14.9705627,1 19,5.02943725 19,10 L19,10 L19,10 C19,14.9705627 14.9705627,19 10,19 L10,19 L10,19 C5.02943725,19 1,14.9705627 1,10 L1,10 L1,10 C1,5.02943725 5.02943725,1 10,1 L10,1 Z\"\r\n                  className=\"outer\"\r\n                ></path>\r\n              </svg>\r\n              <span>2</span>\r\n            </label>\r\n          </div>\r\n          <div className=\"radio-container\">\r\n            <label\r\n              htmlFor=\"\"\r\n              onClick={() => this.setState({ numberInParty: 3 })}\r\n              for=\"radio-3\"\r\n              className=\"btn-radio\"\r\n            >\r\n              <input type=\"radio\" id=\"radio-3\" name=\"radio-grp\" />\r\n              <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 20 20\">\r\n                <circle cx=\"10\" cy=\"10\" r=\"9\"></circle>\r\n                <path\r\n                  d=\"M10,7 C8.34314575,7 7,8.34314575 7,10 C7,11.6568542 8.34314575,13 10,13 C11.6568542,13 13,11.6568542 13,10 C13,8.34314575 11.6568542,7 10,7 Z\"\r\n                  className=\"inner\"\r\n                ></path>\r\n                <path\r\n                  d=\"M10,1 L10,1 L10,1 C14.9705627,1 19,5.02943725 19,10 L19,10 L19,10 C19,14.9705627 14.9705627,19 10,19 L10,19 L10,19 C5.02943725,19 1,14.9705627 1,10 L1,10 L1,10 C1,5.02943725 5.02943725,1 10,1 L10,1 Z\"\r\n                  className=\"outer\"\r\n                ></path>\r\n              </svg>\r\n              <span>3</span>\r\n            </label>\r\n          </div>\r\n          <div className=\"radio-container\">\r\n            <label\r\n              htmlFor=\"\"\r\n              onClick={() => this.setState({ numberInParty: 4 })}\r\n              for=\"radio-4\"\r\n              className=\"btn-radio\"\r\n            >\r\n              <input type=\"radio\" id=\"radio-4\" name=\"radio-grp\" />\r\n              <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 20 20\">\r\n                <circle cx=\"10\" cy=\"10\" r=\"9\"></circle>\r\n                <path\r\n                  d=\"M10,7 C8.34314575,7 7,8.34314575 7,10 C7,11.6568542 8.34314575,13 10,13 C11.6568542,13 13,11.6568542 13,10 C13,8.34314575 11.6568542,7 10,7 Z\"\r\n                  className=\"inner\"\r\n                ></path>\r\n                <path\r\n                  d=\"M10,1 L10,1 L10,1 C14.9705627,1 19,5.02943725 19,10 L19,10 L19,10 C19,14.9705627 14.9705627,19 10,19 L10,19 L10,19 C5.02943725,19 1,14.9705627 1,10 L1,10 L1,10 C1,5.02943725 5.02943725,1 10,1 L10,1 Z\"\r\n                  className=\"outer\"\r\n                ></path>\r\n              </svg>\r\n              <span>4</span>\r\n            </label>\r\n          </div>\r\n          <div className=\"radio-container\">\r\n            <label\r\n              htmlFor=\"\"\r\n              onClick={() => this.setState({ numberInParty: 5 })}\r\n              for=\"radio-5\"\r\n              className=\"btn-radio\"\r\n            >\r\n              <input type=\"radio\" id=\"radio-5\" name=\"radio-grp\" />\r\n              <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 20 20\">\r\n                <circle cx=\"10\" cy=\"10\" r=\"9\"></circle>\r\n                <path\r\n                  d=\"M10,7 C8.34314575,7 7,8.34314575 7,10 C7,11.6568542 8.34314575,13 10,13 C11.6568542,13 13,11.6568542 13,10 C13,8.34314575 11.6568542,7 10,7 Z\"\r\n                  className=\"inner\"\r\n                ></path>\r\n                <path\r\n                  d=\"M10,1 L10,1 L10,1 C14.9705627,1 19,5.02943725 19,10 L19,10 L19,10 C19,14.9705627 14.9705627,19 10,19 L10,19 L10,19 C5.02943725,19 1,14.9705627 1,10 L1,10 L1,10 C1,5.02943725 5.02943725,1 10,1 L10,1 Z\"\r\n                  className=\"outer\"\r\n                ></path>\r\n              </svg>\r\n              <span>5</span>\r\n            </label>\r\n          </div>\r\n\r\n          <select\r\n            onChange={this.onInputChange}\r\n            id=\"numberInParty\"\r\n            valuename=\"number-of-people\"\r\n          >\r\n            <option value=\"\" disabled selected>\r\n              6+\r\n            </option>\r\n            <option value=\"6\">6</option>\r\n            <option value=\"7\">7</option>\r\n            <option value=\"8\">8</option>\r\n            <option value=\"9\">9</option>\r\n            <option value=\"10\">10</option>\r\n            <option value=\"11\">11</option>\r\n            <option value=\"12\">12</option>\r\n            <option value=\"13\">13</option>\r\n            <option value=\"14\">14</option>\r\n            <option value=\"15\">15</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div id=\"add-people-container\">\r\n        <h2>Add Party</h2>\r\n        <div className=\"input-container-wrapper\">\r\n          {partyType}\r\n          {partyName}\r\n          {!this.state.isReservation ? pasrtyDescription : \"\"}\r\n          {partyNum}\r\n          {partyPayment}\r\n\r\n          <div\r\n            onClick={() =>\r\n              this.addParty(\r\n                [this.state],\r\n                this.state.numberInParty,\r\n                this.state.isReservation\r\n              )\r\n            }\r\n            className=\"input-container-button\"\r\n          >\r\n            <span>Add Party</span>\r\n            <span>{plusIcon}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddParty;\r\n","import React, { Fragment, Component } from \"react\";\r\nimport \"./editParty.css\";\r\nimport { plusIcon } from \"../../../utils/icons/icons\";\r\nclass EditParty extends Component {\r\n  state = {\r\n    description: \"testttt\"\r\n  };\r\n\r\n  onInputChange = e => {\r\n    console.log(e.target.id);\r\n    console.log(e.target.value);\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    this.props.updatePartyData(\r\n      this.props.partyId,\r\n      \"description\",\r\n      this.state.description\r\n    );\r\n    this.props.handleEditModalToggle();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"edit-party-container\">\r\n        <h2>Add Description</h2>\r\n        <div className=\"input-container-wrapper\">\r\n          <div className=\"input-container\">\r\n            <label>\r\n              Description\r\n              <textarea\r\n                onChange={this.onInputChange}\r\n                value={this.state.value}\r\n                id=\"description\"\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <div\r\n            onClick={() => this.handleSubmit()}\r\n            className=\"input-container-button\"\r\n          >\r\n            <span>Add Description</span>\r\n            <span>{plusIcon}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditParty;\r\n","import React, { Component } from \"react\";\r\nimport \"./css/partyCard.css\";\r\nimport { edit, checkMark, dollarSign } from \"../../../../utils/icons/icons\";\r\n\r\nclass PartyCard extends Component {\r\n  state = {\r\n    timeRemaining: 60,\r\n    width: \"1%\",\r\n    isReservation: null,\r\n    reservationIsReady: null,\r\n    isPaid: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      isReservation: this.props.party.isReservation,\r\n      reservationIsReady: this.props.party.reservationIsReady,\r\n      isPaid: this.props.party.paid\r\n    });\r\n\r\n    if (!this.props.party.isReservation) {\r\n      this.handleStartCountdown();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // use intervalId from the state to clear the interval\r\n    console.log(\"Unmounted\");\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  handleStartCountdown = () => {\r\n    let d = 60000;\r\n    let t = 1500;\r\n    if (!this.state.isReservation) {\r\n      this.interval = setInterval(() => {\r\n        let widthAmt;\r\n\r\n        if (this.state.width === \"100%\") {\r\n          widthAmt = \"100%\";\r\n        } else {\r\n          widthAmt = `${100 - 100 / (61 / this.state.timeRemaining)}%`;\r\n        }\r\n\r\n        if (this.state.timeRemaining === 0) {\r\n          this.props.updatePartyData(this.props.party.id, \"isOverdue\", true);\r\n          this.props.calcCurrentNumOfSpotsLeft(this.props.party.numberInParty);\r\n          // this.props.updateCurrentPartyLists();\r\n        }\r\n\r\n        this.setState({\r\n          timeRemaining: this.state.timeRemaining - 1,\r\n          width: widthAmt\r\n        });\r\n      }, this.props.countDownSpeed);\r\n    } else {\r\n      this.setState({\r\n        width: \"0%\"\r\n      });\r\n    }\r\n  };\r\n\r\n  handleButtonClick = () => {\r\n    if (!this.state.isReservation) {\r\n      this.props.onClick_remove(\r\n        this.props.party.id,\r\n        this.props.party.numberInParty\r\n      );\r\n    } else if (this.state.isReservation && this.state.reservationIsReady) {\r\n      this.setState(\r\n        {\r\n          isReservation: false\r\n        },\r\n        () => {\r\n          this.props.handleEditModalToggle(this.props.party.id);\r\n          this.props.handleUpdateTimes(this.props.party.id);\r\n          this.handleStartCountdown();\r\n        }\r\n      );\r\n    } else if (this.state.isReservation && !this.state.reservationIsReady) {\r\n      this.setState(\r\n        {\r\n          isReservation: false,\r\n          reservationIsReady: true\r\n        },\r\n\r\n        () => {\r\n          this.props.handleEditModalToggle(this.props.party.id);\r\n          this.props.onClick_checkReservation(\r\n            this.props.party.id,\r\n            this.props.party.numberInParty\r\n          );\r\n        }\r\n      );\r\n    }\r\n\r\n    console.log(\"CHECKED IN\");\r\n  };\r\n\r\n  handleIsPaidToggle = () => {\r\n    this.props.updatePartyData(this.props.party.id, \"paid\", !this.state.isPaid);\r\n    this.setState({ isPaid: !this.state.isPaid });\r\n  };\r\n\r\n  handleFill = () => {\r\n    this.setState({\r\n      width: \"100%\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      name,\r\n      description,\r\n      numberInParty,\r\n      paid,\r\n      isReservation,\r\n      reservationIsReady,\r\n      timeStart,\r\n      timeEnd,\r\n      isUpcomingReservation\r\n    } = this.props.party;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundColor: this.state.timeRemaining >= 1 ? \"#fbfbfb\" : \"#ffbaba\"\r\n        }}\r\n        className={`party-wrapper ${\r\n          this.state.isReservation ? \"reservation\" : \"\"\r\n        }`}\r\n      >\r\n        <div\r\n          className=\"details-container\"\r\n          style={{\r\n            backgroundColor: isUpcomingReservation ? \"#c9dfeb\" : \"#fbfbfb\"\r\n          }}\r\n        >\r\n          <div className=\"detail-row\" id=\"party-name\">\r\n            <span id=\"title\">Party Name:</span>\r\n            <span id=\"name\">{name}</span>\r\n          </div>\r\n\r\n          <div className=\"detail-row\" id=\"description\">\r\n            <span className=\"details-title\">Description:</span>\r\n            <span className=\"details-value\">{description}</span>\r\n          </div>\r\n          <div className=\"sub-details-container\">\r\n            <div className=\"detail-row\" id=\"number-in-party\">\r\n              <span className=\"details-title\">Size:</span>\r\n              <span className=\"details-value\">{numberInParty}</span>\r\n            </div>\r\n            <div className=\"detail-row\" id=\"status\">\r\n              <span className=\"details-title\">Status:</span>\r\n              <span className=\"details-value\">\r\n                {this.state.isReservation ? \"Reservation\" : \"In Room\"}\r\n              </span>\r\n            </div>\r\n            <div\r\n              onClick={() => {\r\n                this.handleIsPaidToggle();\r\n              }}\r\n              className=\"detail-row\"\r\n              id=\"payment\"\r\n            >\r\n              <span className=\"details-title\">Paid:</span>\r\n              <span\r\n                style={{ color: this.state.isPaid ? \"#6fa037\" : \"#c1c0c0\" }}\r\n                className=\"details-value\"\r\n              >\r\n                {dollarSign}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"time-remaining-cta-container\">\r\n          <div className=\"time-remaining-container\">\r\n            <span id=\"time-remaining\">\r\n              <span id=\"title\">Time Left:</span>\r\n              <span id=\"time\">{this.state.timeRemaining}</span>\r\n            </span>\r\n            <div className=\"time-start-end-container\">\r\n              <div className=\"detail-row\" id=\"time-start\">\r\n                <span className=\"details-title\"> Start:</span>\r\n                <span className=\"details-value\"> {timeStart}</span>\r\n              </div>\r\n              <div className=\"detail-row\" id=\"time-end\">\r\n                <span className=\"details-title\"> End:</span>\r\n                <span className=\"details-value\"> {timeEnd}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"cta-container\">\r\n            <button\r\n              onClick={() => {\r\n                this.handleButtonClick();\r\n              }}\r\n              className=\"complete-btn\"\r\n            >\r\n              <span>{this.state.isReservation ? \"Check-In\" : \"Complete\"}</span>\r\n              <div style={{ width: this.state.width }} className=\"fill\"></div>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PartyCard;\r\n","import React from 'react';\r\nimport './listOfParties.css';\r\nimport PartyCard from './partyCard/partyCard';\r\nconst ListOfParties = props => {\r\n\tconst peopleList = props.listArray.map(party => {\r\n\t\treturn (\r\n\t\t\t<PartyCard\r\n\t\t\t\tcountDownSpeed={props.countDownSpeed}\r\n\t\t\t\tkey={party.id}\r\n\t\t\t\tonClick_remove={props.onClick_remove}\r\n\t\t\t\tonClick_checkReservation={props.onClick_checkReservation}\r\n\t\t\t\thandleUpdateTimes={props.handleUpdateTimes}\r\n\t\t\t\tparty={party}\r\n\t\t\t\tupdatePartyData={props.updatePartyData}\r\n\t\t\t\thandleEditModalToggle={props.handleEditModalToggle}\r\n\t\t\t\tcalcCurrentNumOfSpotsLeft={props.calcCurrentNumOfSpotsLeft}\r\n\t\t\t\tupdateCurrentPartyLists={props.updateCurrentPartyLists}\r\n\t\t\t/>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className=\"row-container\">\r\n\t\t\t<h2 className=\"title\">\r\n\t\t\t\t{props.title} ({props.currentOccupancy})\r\n\t\t\t</h2>\r\n\t\t\t<div id=\"list-of-parties-container\">{peopleList}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ListOfParties;\r\n","import React, { Component } from \"react\";\r\nimport { checkMark } from \"../../../../utils/icons/icons\";\r\nimport \"./css/partySizeRow.css\";\r\nimport { render } from \"@testing-library/react\";\r\n\r\nclass PartySizeRow extends Component {\r\n  state = {\r\n    isAvailable: false,\r\n    nextAvailableTime: \"2:45\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.checkIfAvailable();\r\n  }\r\n\r\n  checkIfAvailable = () => {\r\n    let currentParty = this.props.partySize;\r\n    let currentParties = this.props.currentOccupancy;\r\n    let listOfParties = this.props.listOfParties;\r\n\r\n    if (currentParty < currentParties) {\r\n      // console.log('Current: ' + currentParty);\r\n      // console.log('End: ' + currentParties);\r\n      // console.log('Parties: ' + this.props.currentOccupancy);\r\n      this.setState({\r\n        isAvailable: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isAvailable: false\r\n      });\r\n    }\r\n  };\r\n\r\n  getNextAvailableTime = () => {\r\n    let nextAvailableTime;\r\n    let timeRemaining = this.props.currentOccupancy;\r\n    // if (this.props.partySize * 60 <= timeRemaining) {\r\n    //   // let sortedList = this.props.listOfParties.sort();\r\n    //   this.props.listOfParties[0].timeEnd;\r\n    // }\r\n\r\n    let endTime = this.props.listOfParties[0].timeEnd;\r\n    //\r\n    let numInEndtimeParty__min = this.props.listOfParties[0].numberInParty;\r\n    //\r\n    let numInEnteringPary__min = this.props.partySize;\r\n\r\n    let newTimeRemaining__min = numInEndtimeParty__min;\r\n\r\n    if (numInEnteringPary__min < newTimeRemaining__min) {\r\n      // console.log('You May Enter');\r\n      return endTime;\r\n    } else {\r\n      //   console.log(\"Return NextAvailableTime (${tis})\");\r\n      // console.log(\r\n      // \t`Return NextAvailableTime (Current Time + (Current Time - End Time)|| ${this.props.currentTime} + time remainings`\r\n      // );\r\n      return endTime;\r\n    }\r\n    console.log(`End Time: ${endTime}`);\r\n\r\n    // return currentTime + timeDifference;\r\n    // return nextAvailableTime;\r\n  };\r\n\r\n  render() {\r\n    const { partySize } = this.props;\r\n\r\n    return (\r\n      <div\r\n        onClick={() => {\r\n          this.getNextAvailableTime();\r\n        }}\r\n        id=\"party-size1\"\r\n        className=\"party-size-wrapper\"\r\n      >\r\n        <div className=\"party-size\">{partySize}</div>\r\n        <div className=\"next-available-time\">\r\n          {partySize <= 15 - this.props.currentOccupancy\r\n            ? checkMark\r\n            : this.getNextAvailableTime()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PartySizeRow;\r\n","import React, { Component } from \"react\";\r\nimport \"./css/partySizeAvailability.css\";\r\nimport PartySizeRow from \"./partySizeRow/partySizeRow\";\r\nconst PartySizeAvailability = props => {\r\n  //   let partyRows = function() {\r\n  //     let partyRows = (\r\n  //       <div className=\"containr\">\r\n  //         <PartySizeRow partySize=\"1\" />\r\n  //         <PartySizeRow partySize=\"1\" />\r\n  //         <PartySizeRow partySize=\"1\" />\r\n  //       </div>\r\n  //     );\r\n\r\n  let partyRows = Array.from(Array(15)).map((x, i) => (\r\n    <PartySizeRow\r\n      currentTime={props.currentTime}\r\n      currentOccupancy={props.currentOccupancy}\r\n      listOfParties={props.listOfParties}\r\n      partySize={i + 1}\r\n      key={Math.random()}\r\n    />\r\n  ));\r\n\r\n  // for (let i = 0; i <= 15; i++) {\r\n  //   //   console.log(\"Party: \" + i);\r\n  //   return <PartySizeRow partySize=\"1\" />;\r\n  // }\r\n\r\n  return (\r\n    <div id=\"party-size-availability-container\">\r\n      <h2>Walk-In Availability</h2>\r\n      {partyRows}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PartySizeAvailability;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./modal.css\";\r\n\r\nconst Modal = props => {\r\n  const plusIcon = (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      data-prefix=\"fas\"\r\n      data-icon=\"plus\"\r\n      className=\"svg-inline--fa fa-plus fa-w-14\"\r\n      role=\"img\"\r\n      viewBox=\"0 0 448 512\"\r\n    >\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"\r\n      />\r\n    </svg>\r\n  );\r\n\r\n  const modalContent = (\r\n    <div className=\"modal-container\">\r\n      <div onClick={props.click} className=\"backdrop\"></div>\r\n      <div id=\"modal\">\r\n        <div onClick={props.click} className=\"close-btn\">\r\n          {plusIcon}\r\n        </div>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(\r\n    modalContent,\r\n    document.getElementById(\"modal-hook\")\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport AddParty from \"./addParty/addParty\";\r\nimport EditParty from \"./editParty/editParty\";\r\nimport ListOfParties from \"./listOfParties/listOfParties\";\r\nimport PartySizeAvailability from \"./partySizeAvailability/partySizeAvailability\";\r\nimport Modal from \"../../utils/modal/modal\";\r\nimport \"./css/cattery.css\";\r\nimport * as moment from \"moment\";\r\nimport { clockIcon, usersIcon, plusIcon } from \"../../utils/icons/icons\";\r\n// import { formatAMPM } from '../../utils/helpers/formatTime';\r\n// Todo\r\n\r\n// -- Complete functionality\r\n// -- Move complete to new section (undo btn in place of complete)\r\n// -- Party size availability functionality\r\n// -- Add 5 min button\r\n\r\n//house timer here\r\nclass Cattery extends Component {\r\n  state = {\r\n    countDownSpeed: 60000,\r\n    modalIsOpen: false,\r\n    currentOccupancy: 0,\r\n    currentNumOfReservations: 0,\r\n    currentNumOfUpcomingReservations: 0,\r\n    currentNumOverdue: 0,\r\n    totalGuests: 0,\r\n    selectedPartyId: null,\r\n    currentTime: \"2:10 PM\",\r\n    endTimes: 80,\r\n    listOfParties: [\r\n      // {\r\n      // \tid: 111,\r\n      // \tname: 'Test',\r\n      // \tdescription: null,\r\n      // \tnumberInParty: 5,\r\n      // \tpaid: true,\r\n      // \tstatus: null,\r\n      // \ttimeRemaining: 60,\r\n      // \ttimeStart: null,\r\n      // \ttimeEnd: null,\r\n      // \twidth: '100%',\r\n      // \tisReservation: false,\r\n      // \treservationTime: null\r\n      // }\r\n    ],\r\n    listOfReservations: [\r\n      // {\r\n      // \tname: 'Carll',\r\n      // \tdescription: '1 person with black shirt, red hat',\r\n      // \tnumberInParty: 2,\r\n      // \tpaid: true,\r\n      // \tstatus: 'In Room',\r\n      // \ttimeRemaining: 60,\r\n      // \ttimeStart: '2:10',\r\n      // \ttimeEnd: '3:10',\r\n      // \tisReservation: true\r\n      // }\r\n    ],\r\n    isEditMode: false\r\n  };\r\n\r\n  //sets Current Time  and Num of People in each array\r\n  componentDidMount() {\r\n    let currentTime = moment().format(\"h:mm A\");\r\n    setInterval(this.getCurrentTime, 1000);\r\n\r\n    this.setState({\r\n      currentTime: currentTime\r\n    });\r\n  }\r\n\r\n  getCurrentTime = () => {\r\n    let currentTime = moment().format(\"h:mm A\");\r\n    for (let i = 0; i < this.state.listOfReservations.length; i++) {\r\n      let party = this.state.listOfReservations;\r\n      let now = moment()\r\n        .add(\"hours\", 1)\r\n        .format(\"h:mm A\");\r\n      party[i].reservationIsReady = true;\r\n\r\n      if (party[i].timeStart === currentTime) {\r\n        this.handleMoveParty(\r\n          party[i].id,\r\n          party[i].numberInParty,\r\n          this.state.listOfReservations,\r\n          this.state.listOfParties\r\n        );\r\n      }\r\n      console.log(`Party Time Start: ${party[i].timeStart}`);\r\n\r\n      let currentTimePlus1 = moment()\r\n        .add(\"hours\", 1)\r\n        .format(\"h:mm A\");\r\n      if (\r\n        party[i].timeStart === currentTimePlus1 &&\r\n        party[i].isUpcomingReservation === false\r\n      ) {\r\n        console.log(\"Match\");\r\n        party[i].isUpcomingReservation = true;\r\n        this.setState({\r\n          currentNumOfUpcomingReservations:\r\n            this.state.currentNumOfUpcomingReservations + party[i].numberInParty\r\n        });\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      currentTime: currentTime\r\n    });\r\n  };\r\n\r\n  handleGetTimeStartTimeEnd = id => {\r\n    let timeStartTimeEnd = {\r\n      timeStart: moment().format(\"h:mm A\"),\r\n      timeEnd: moment()\r\n        .add(\"hours\", 1)\r\n        .format(\"h:mm A\")\r\n    };\r\n\r\n    return timeStartTimeEnd;\r\n  };\r\n\r\n  handleUpdateTimes = id => {\r\n    let newTimes = this.handleGetTimeStartTimeEnd();\r\n    let party = this.state.listOfParties.filter(party => {\r\n      return party.id === id;\r\n    });\r\n    party[0].timeStart = newTimes.timeStart;\r\n    party[0].timeEnd = newTimes.timeEnd;\r\n\r\n    console.log(newTimes, party);\r\n  };\r\n\r\n  //Modal Toggle\r\n  handleModalToggle = () => {\r\n    this.setState({\r\n      modalIsOpen: !this.state.modalIsOpen,\r\n      isEditMode: false\r\n    });\r\n  };\r\n\r\n  //Removes Party from list\r\n  handleRemoveParty = (id, numInParty, timeRemaining) => {\r\n    let updatedParties = this.state.listOfParties.filter(party => {\r\n      return party.id !== id;\r\n    });\r\n\r\n    this.setState({\r\n      listOfParties: updatedParties,\r\n      currentOccupancy: this.state.currentOccupancy - numInParty,\r\n      totalGuests: this.state.totalGuests + numInParty,\r\n      currentNumOverdue:\r\n        timeRemaining <= 0 ? this.state.currentNumOverdue - numInParty : 0\r\n    });\r\n  };\r\n\r\n  handleMoveParty = (\r\n    id,\r\n    numOfNewPeople,\r\n    currentListArray,\r\n    listDestinationArray\r\n  ) => {\r\n    //Returns the party\r\n    let filteredParty = currentListArray.filter(p => {\r\n      return p.id === id;\r\n    });\r\n\r\n    let filteredCurrentListArray = currentListArray.filter(p => {\r\n      return p.id !== id;\r\n    });\r\n\r\n    //Takes existing party list and adds new party\r\n    let newlistDestinationArray = [...listDestinationArray, ...filteredParty];\r\n\r\n    //Sets state for --Num of pople in the room --\r\n    this.setState({\r\n      currentOccupancy:\r\n        Number(this.state.currentOccupancy) + Number(numOfNewPeople),\r\n      currentNumOfReservations:\r\n        Number(this.state.currentNumOfReservations) - Number(numOfNewPeople),\r\n      listOfParties: newlistDestinationArray,\r\n      listOfReservations: filteredCurrentListArray\r\n    });\r\n  };\r\n\r\n  handleCheckReservation = (id, numOfNewPeople) => {\r\n    console.log(\"Checked In\" + id);\r\n    //Returns the party\r\n    let party = this.state.listOfReservations.filter(party => {\r\n      return party.id === id;\r\n    });\r\n\r\n    let newReservationList = this.state.listOfReservations.filter(party => {\r\n      return party.id !== id;\r\n    });\r\n\r\n    //Sets party reservation to false\r\n    let newTimes = this.handleGetTimeStartTimeEnd();\r\n    party[0].isReservation = false;\r\n    party[0].timeStart = newTimes.timeStart;\r\n    party[0].timeEnd = newTimes.timeEnd;\r\n\r\n    //Takes existing party list and adds new party\r\n    let newPartyList = [...this.state.listOfParties, ...party];\r\n    let numOfUpcoming = party[0].isUpcomingReservation\r\n      ? Number(numOfNewPeople)\r\n      : 0;\r\n    //Sets state for --Num of pople in the room --\r\n    this.setState({\r\n      currentOccupancy:\r\n        Number(this.state.currentOccupancy) + Number(numOfNewPeople),\r\n      currentNumOfReservations:\r\n        Number(this.state.currentNumOfReservations) - Number(numOfNewPeople),\r\n      currentNumOfUpcomingReservations:\r\n        this.state.currentNumOfUpcomingReservations - numOfUpcoming,\r\n      listOfParties: newPartyList,\r\n      listOfReservations: newReservationList\r\n    });\r\n\r\n    if (party[0].isUpcomingReservation) {\r\n      party[0].isUpcomingReservation = false;\r\n    }\r\n\r\n    // this.updateCurrentPartyLists()\r\n  };\r\n\r\n  updateCurrentPartyLists = (party, numOfNewPeople, isReservation) => {\r\n    if (!isReservation) {\r\n      let newPartyList = [...this.state.listOfParties, ...party];\r\n\r\n      this.setState({\r\n        currentOccupancy:\r\n          Number(this.state.currentOccupancy) + Number(numOfNewPeople),\r\n        listOfParties: newPartyList,\r\n        modalIsOpen: false\r\n      });\r\n    } else {\r\n      let newPartyList = [...this.state.listOfReservations, ...party];\r\n      this.setState({\r\n        currentNumOfReservations:\r\n          Number(this.state.currentNumOfReservations) + Number(numOfNewPeople),\r\n\r\n        listOfReservations: newPartyList,\r\n        modalIsOpen: false\r\n      });\r\n    }\r\n  };\r\n\r\n  updatePartyData = (id, targetKey, value) => {\r\n    let party = this.getActiveParty(id);\r\n    party[0][targetKey] = value;\r\n    return party;\r\n  };\r\n\r\n  getActiveParty = id => {\r\n    let party;\r\n\r\n    let p1 = this.state.listOfParties.filter(party => {\r\n      return party.id === id;\r\n    });\r\n\r\n    let p2 = this.state.listOfReservations.filter(party => {\r\n      return party.id === id;\r\n    });\r\n\r\n    if (typeof p1[0] !== typeof undefined) {\r\n      party = p1;\r\n    }\r\n    if (typeof p2[0] !== typeof undefined) {\r\n      party = p2;\r\n    }\r\n\r\n    return party;\r\n  };\r\n\r\n  handleEditModalToggle = id => {\r\n    this.handleModalToggle();\r\n    this.setState({\r\n      isEditMode: !this.state.isEditMode,\r\n      currentPartyId: id || null\r\n    });\r\n  };\r\n\r\n  handleTestMode = () => {\r\n    if (this.state.countDownSpeed === 110) {\r\n      this.setState({\r\n        countDownSpeed: 60000\r\n      });\r\n    }\r\n    if (this.state.countDownSpeed === 60000) {\r\n      this.setState({\r\n        countDownSpeed: 110\r\n      });\r\n    }\r\n  };\r\n\r\n  calcCurrentNumOfSpotsLeft = numInParty => {\r\n    let filteredNumOfSpotsLeft__LIST = this.state.listOfParties.filter(\r\n      party => {\r\n        return party.isOverdue === true;\r\n      }\r\n    );\r\n    let numOfOverdue = this.getNumPeopleInList(\r\n      filteredNumOfSpotsLeft__LIST,\r\n      \"numberInParty\"\r\n    );\r\n    this.setState({\r\n      currentNumOverdue: numOfOverdue\r\n    });\r\n  };\r\n\r\n  getNumPeopleInList = (array, key) => {\r\n    let numOfPeopleInList = 0;\r\n    console.log(\"asdasd\");\r\n    for (let i = 0; i < array.length; i++) {\r\n      numOfPeopleInList += array[i].numberInParty;\r\n    }\r\n    return numOfPeopleInList;\r\n  };\r\n\r\n  render() {\r\n    const addUser = (\r\n      <div id=\"number-of-people-container\">\r\n        <AddParty updateCurrentPartyLists={this.updateCurrentPartyLists} />\r\n      </div>\r\n    );\r\n\r\n    const upcomingTag = (\r\n      <div className=\"upcoming-reservations\">\r\n        Includes {this.state.currentNumOfUpcomingReservations} Upcoming\r\n      </div>\r\n    );\r\n\r\n    const header = (\r\n      <div id=\"time-and-people-container\">\r\n        <div id=\"current-time\" className=\"container\">\r\n          <span className=\"icon\">{clockIcon}</span>\r\n          <div onClick={this.handleTestMode} className=\"primary-value\">\r\n            {this.state.currentTime}\r\n            {this.state.countDownSpeed === 110 ? (\r\n              <div className=\"test-mode\">Test Mode</div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div id=\"current-spots remaining\" className=\"container\">\r\n          <span className=\"icon\">{usersIcon}</span>\r\n          <span className=\"primary-value  number-in-cattery\">\r\n            <span>\r\n              {15 -\r\n                (this.state.currentOccupancy +\r\n                  this.state.currentNumOfUpcomingReservations -\r\n                  this.state.currentNumOverdue)}\r\n            </span>\r\n            {this.state.currentNumOfUpcomingReservations === 0\r\n              ? \"\"\r\n              : upcomingTag}\r\n          </span>\r\n          <span className=\"open-spots\">Spots Available</span>\r\n        </div>\r\n        <div id=\"current-occupancy\" className=\"container\">\r\n         \r\n          <span className=\"primary-value  number-in-cattery\">\r\n            <span>{this.state.totalGuests}</span>\r\n          </span>\r\n          <span className=\"open-spots\">Total Guests Today</span>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const modal = (\r\n      <Modal click={this.handleModalToggle}>\r\n        {!this.state.isEditMode ? (\r\n          addUser\r\n        ) : (\r\n          <EditParty\r\n            partyId={this.state.currentPartyId}\r\n            updatePartyData={this.updatePartyData}\r\n            handleEditModalToggle={this.handleEditModalToggle}\r\n          />\r\n        )}\r\n      </Modal>\r\n    );\r\n    const addPartyBtn = (\r\n      <span onClick={this.handleModalToggle} className=\"modal-btn\">\r\n        <span className=\"text\"> ADD PARTY</span>\r\n        <span className=\"btn\"> {plusIcon}</span>\r\n      </span>\r\n    );\r\n\r\n    return (\r\n      <Fragment>\r\n        {header}\r\n        <div className=\"cattery-container\">\r\n          {this.state.modalIsOpen ? modal : addPartyBtn}\r\n          <div id=\"party-size-availability-col\">\r\n            <PartySizeAvailability\r\n              currentTime={this.state.currentTime}\r\n              currentOccupancy={\r\n                this.state.currentOccupancy +\r\n                this.state.currentNumOfUpcomingReservations -\r\n                this.state.currentNumOverdue\r\n              }\r\n              listOfParties={this.state.listOfParties}\r\n            />\r\n          </div>\r\n          <div id=\"cattery-body-col\">\r\n            <ListOfParties\r\n              countDownSpeed={this.state.countDownSpeed}\r\n              title=\"Current Occupancy\"\r\n              currentOccupancy={this.state.currentOccupancy}\r\n              listArray={this.state.listOfParties}\r\n              onClick_remove={this.handleRemoveParty}\r\n              onClick_checkReservation={this.handleCheckReservation}\r\n              handleUpdateTimes={this.handleUpdateTimes}\r\n              updatePartyData={this.updatePartyData}\r\n              handleEditModalToggle={this.handleEditModalToggle}\r\n              calcCurrentNumOfSpotsLeft={this.calcCurrentNumOfSpotsLeft}\r\n              updateCurrentPartyLists={this.updateCurrentPartyLists}\r\n            />\r\n            <ListOfParties\r\n              countDownSpeed={this.state.countDownSpeed}\r\n              title=\"Upcoming Reservations\"\r\n              currentOccupancy={this.state.currentNumOfReservations}\r\n              listArray={this.state.listOfReservations}\r\n              onClick_remove={this.handleRemoveParty}\r\n              onClick_checkReservation={this.handleCheckReservation}\r\n              handleUpdateTimes={this.handleUpdateTimes}\r\n              updatePartyData={this.updatePartyData}\r\n              handleEditModalToggle={this.handleEditModalToggle}\r\n              calcCurrentNumOfSpotsLeft={this.calcCurrentNumOfSpotsLeft}\r\n              updateCurrentPartyLists={this.updateCurrentPartyLists}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cattery;\r\n","import React from 'react';\nimport Cattery from './components/cattery/cattery'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n<Cattery />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}