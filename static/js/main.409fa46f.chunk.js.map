{"version":3,"sources":["utils/icons/icons.js","components/cattery/editParty/editParty.js","components/cattery/listOfParties/partyCard/partyCard.js","utils/helpers/helpers.js","components/cattery/listOfParties/listOfParties.js","App.js","components/cattery/partySizeAvailability/partySizeRow/partySizeRow.js","components/cattery/partySizeAvailability/partySizeAvailability.js","utils/modal/modal.js","components/ui-components/spotsAvailable.js","components/ui-components/header.js","utils/input/input.js","components/cattery/addParty/timeKeeper.js","components/cattery/addParty/addParty.js","components/ui-components/addUser.js","components/ui-components/addPartyButton.js","components/cattery.js","serviceWorker.js","index.js"],"names":["checkMark","xmlns","className","aria-hidden","focusable","data-prefix","data-icon","role","viewBox","fill","d","dollarSign","clockIcon","usersIcon","plusIcon","pencil","EditParty","state","description","onInputChange","e","console","log","target","id","value","setState","handleSubmit","props","updatePartyData","partyId","handleEditModalToggle","onChange","this","onClick","Component","PartyCard","timeRemaining","width","isReservation","isPaid","handleUpdateTimeRemaining","timeLeft","currentTime","moment","endTime","party","times","end","duration","diff","parseInt","asHours","asMinutes","handleButtonClick","handleCheckReservation","numberInParty","handleRemoveParty","handleIsPaidToggle","handleFill","paid","prevProps","name","isUpcomingReservation","style","backgroundColor","color","start","sortArrayByKey","key","filter","sort","p1","p2","timeStamp","sortPartyArray","rowNum","seperateByRow","handleGetTimes","minute","hour","format","add","addArrayByKey","array","reduce","prev","cur","socket","ListOfParties","useState","parties","setParties","reservations","setReservations","useEffect","sortedPartiesList","sortedReservationsList","mapList","map","modifyStateNum","countDownSpeed","updateCurrentPartyLists","currentOccupancy","currentNumOfReservations","PartySizeRow","partySize","spotsRemaining","newTime","numSpotsAvailable","length","i","getNextTime","PartySizeAvailability","filteredParties","setFilteredParties","sortedParties","isOverdue","partyRows","Array","from","x","Math","random","Modal","modalContent","click","children","ReactDOM","createPortal","document","getElementById","SpotsAvailable","currentNumOfUpcomingReservations","currentNumOverdue","numOfNonOverlap","setNumOfNonOverlap","numOfSpotsAvailable","setNumOfSpotsAvailable","upcomingReservationList","overlapAdjustment","nonOverlappingParties__sum","upcomingReservations__sum","row1","currentOccupancyList","overlappingParties","nonOverlappingParties","reservationTime","forEach","push","checkifOverlap","Header","handleSendToServer","totalGuests","Input","label","class","type","placeholder","TimePicker","isOpen","handleUpdateTime","time","formattedTime","formatted","toString","toUpperCase","startTime","currentDate","unix","hour24","toggleOpenTimeKeeper","updateData","handleUpdateReservation","editContainer","timePickerContainer","timeStart","AddParty","isOverlap","addParty","numOfNewPeople","handleAddParty","data","handleUpdateNumOfPeople","num","inputs","querySelectorAll","input","checked","pasrtyDescription","htmlFor","partyName","partyType","partyPayment","partyNum","height","cx","cy","r","valuename","disabled","defaultValue","AddUser","AddPartyButton","handleModalToggle","Cattery","isEditMode","modalIsOpen","currentTimePlusHour","checkPartyStartTimes","newPartyList","updateCatteryState","filteredParty","getFilteredParty","newTimes","updatedParties","currentPartyId","handleMoveParty","destinationRow","filteredArray","dir","newPartyArray","numInParty","handleUpdateTimes","targetKey","stateName","isSubtract","Number","modifyCurrentOccupancy","statenum","currentOccupancyList__rowNum","currentOccupancyNum","handleUpdateStateNums","setInterval","partyState","sumOfNewCurrentOccupancy","sumOfNewCurrentNumOfReservations","sumOfNewCurrentNumOfUpcomingReservations","sumOfNewCurrentNumOverdue","modal","title","App","socketState","setSocketState","setPartyState","io","on","server_data","refreshData","emit","Boolean","window","location","hostname","match","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.409fa46f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const checkMark = (\r\n\t<svg\r\n\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\tclassName=\"checkmark\"\r\n\t\taria-hidden=\"true\"\r\n\t\tfocusable=\"false\"\r\n\t\tdata-prefix=\"fas\"\r\n\t\tdata-icon=\"check\"\r\n\t\trole=\"img\"\r\n\t\tviewBox=\"0 0 512 512\"\r\n\t>\r\n\t\t<path\r\n\t\t\tfill=\"currentColor\"\r\n\t\t\td=\"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\"\r\n\t\t/>\r\n\t</svg>\r\n);\r\n\r\nexport const edit = (\r\n\t<svg\r\n\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\taria-hidden=\"true\"\r\n\t\tfocusable=\"false\"\r\n\t\tdata-prefix=\"far\"\r\n\t\tdata-icon=\"edit\"\r\n\t\tclassName=\"svg-inline--fa fa-edit fa-w-18\"\r\n\t\trole=\"img\"\r\n\t\tviewBox=\"0 0 576 512\"\r\n\t>\r\n\t\t<path\r\n\t\t\tfill=\"currentColor\"\r\n\t\t\td=\"M402.3 344.9l32-32c5-5 13.7-1.5 13.7 5.7V464c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h273.5c7.1 0 10.7 8.6 5.7 13.7l-32 32c-1.5 1.5-3.5 2.3-5.7 2.3H48v352h352V350.5c0-2.1.8-4.1 2.3-5.6zm156.6-201.8L296.3 405.7l-90.4 10c-26.2 2.9-48.5-19.2-45.6-45.6l10-90.4L432.9 17.1c22.9-22.9 59.9-22.9 82.7 0l43.2 43.2c22.9 22.9 22.9 60 .1 82.8zM460.1 174L402 115.9 216.2 301.8l-7.3 65.3 65.3-7.3L460.1 174zm64.8-79.7l-43.2-43.2c-4.1-4.1-10.8-4.1-14.8 0L436 82l58.1 58.1 30.9-30.9c4-4.2 4-10.8-.1-14.9z\"\r\n\t\t/>\r\n\t</svg>\r\n);\r\n\r\nexport const dollarSign = (\r\n\t<svg\r\n\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\taria-hidden=\"true\"\r\n\t\tfocusable=\"false\"\r\n\t\tdata-prefix=\"fas\"\r\n\t\tdata-icon=\"dollar-sign\"\r\n\t\tclassName=\"svg-inline--fa fa-dollar-sign fa-w-9\"\r\n\t\trole=\"img\"\r\n\t\tviewBox=\"0 0 288 512\"\r\n\t>\r\n\t\t<path\r\n\t\t\tfill=\"currentColor\"\r\n\t\t\td=\"M209.2 233.4l-108-31.6C88.7 198.2 80 186.5 80 173.5c0-16.3 13.2-29.5 29.5-29.5h66.3c12.2 0 24.2 3.7 34.2 10.5 6.1 4.1 14.3 3.1 19.5-2l34.8-34c7.1-6.9 6.1-18.4-1.8-24.5C238 74.8 207.4 64.1 176 64V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48h-2.5C45.8 64-5.4 118.7.5 183.6c4.2 46.1 39.4 83.6 83.8 96.6l102.5 30c12.5 3.7 21.2 15.3 21.2 28.3 0 16.3-13.2 29.5-29.5 29.5h-66.3C100 368 88 364.3 78 357.5c-6.1-4.1-14.3-3.1-19.5 2l-34.8 34c-7.1 6.9-6.1 18.4 1.8 24.5 24.5 19.2 55.1 29.9 86.5 30v48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-48.2c46.6-.9 90.3-28.6 105.7-72.7 21.5-61.6-14.6-124.8-72.5-141.7z\"\r\n\t\t/>\r\n\t</svg>\r\n);\r\n\r\nexport const clockIcon = (\r\n\t<svg\r\n\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\taria-hidden=\"true\"\r\n\t\tfocusable=\"false\"\r\n\t\tdata-prefix=\"far\"\r\n\t\tdata-icon=\"clock\"\r\n\t\tclassName=\"svg-inline--fa fa-clock fa-w-16\"\r\n\t\trole=\"img\"\r\n\t\tviewBox=\"0 0 512 512\"\r\n\t>\r\n\t\t<path\r\n\t\t\tfill=\"currentColor\"\r\n\t\t\td=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z\"\r\n\t\t/>\r\n\t</svg>\r\n);\r\n\r\nexport const usersIcon = (\r\n\t<svg\r\n\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\taria-hidden=\"true\"\r\n\t\tfocusable=\"false\"\r\n\t\tdata-prefix=\"fas\"\r\n\t\tdata-icon=\"user-friends\"\r\n\t\tclassName=\"svg-inline--fa fa-user-friends fa-w-20\"\r\n\t\trole=\"img\"\r\n\t\tviewBox=\"0 0 640 512\"\r\n\t>\r\n\t\t<path\r\n\t\t\tfill=\"currentColor\"\r\n\t\t\td=\"M192 256c61.9 0 112-50.1 112-112S253.9 32 192 32 80 82.1 80 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C51.6 288 0 339.6 0 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zM480 256c53 0 96-43 96-96s-43-96-96-96-96 43-96 96 43 96 96 96zm48 32h-3.8c-13.9 4.8-28.6 8-44.2 8s-30.3-3.2-44.2-8H432c-20.4 0-39.2 5.9-55.7 15.4 24.4 26.3 39.7 61.2 39.7 99.8v38.4c0 2.2-.5 4.3-.6 6.4H592c26.5 0 48-21.5 48-48 0-61.9-50.1-112-112-112z\"\r\n\t\t/>\r\n\t</svg>\r\n);\r\n\r\nexport const plusIcon = (\r\n\t<svg\r\n\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\taria-hidden=\"true\"\r\n\t\tfocusable=\"false\"\r\n\t\tdata-prefix=\"fas\"\r\n\t\tdata-icon=\"plus\"\r\n\t\tclassName=\"svg-inline--fa fa-plus fa-w-14\"\r\n\t\trole=\"img\"\r\n\t\tviewBox=\"0 0 448 512\"\r\n\t>\r\n\t\t<path\r\n\t\t\tfill=\"currentColor\"\r\n\t\t\td=\"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"\r\n\t\t/>\r\n\t</svg>\r\n);\r\nexport const pencil = (\r\n\t<svg\r\n\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\taria-hidden=\"true\"\r\n\t\tfocusable=\"false\"\r\n\t\tdata-prefix=\"fas\"\r\n\t\tdata-icon=\"pencil-alt\"\r\n\t\tclassName=\"svg-inline--fa fa-pencil-alt fa-w-16\"\r\n\t\trole=\"img\"\r\n\t\tviewBox=\"0 0 512 512\"\r\n\t>\r\n\t\t<path\r\n\t\t\tfill=\"currentColor\"\r\n\t\t\td=\"M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z\"\r\n\t\t/>\r\n\t</svg>\r\n);\r\n\r\n//    export const FacebookIcon = props => (\r\n// <svg\r\n// \tid=\"facebook-icon\"\r\n// \taria-hidden=\"true\"\r\n// \tfocusable=\"false\"\r\n// \tdata-prefix=\"fab\"\r\n// \tdata-icon=\"facebook-square\"\r\n// \tclassName=\"svg-inline--fa fa-facebook-square fa-w-14\"\r\n// \trole=\"img\"\r\n// \txmlns=\"http://www.w3.org/2000/svg\"\r\n// \tviewBox=\"0 0 448 512\"\r\n// \tstyle={{ fontSize: props.width }}\r\n// >\r\n// \t<path\r\n// \t\tfill=\"currentColor\"\r\n// \t\td=\"M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h137.25V327.69h-63V256h63v-54.64c0-62.15 37-96.48 93.67-96.48 27.14 0 55.52 4.84 55.52 4.84v61h-31.27c-30.81 0-40.42 19.12-40.42 38.73V256h68.78l-11 71.69h-57.78V480H400a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48z\"\r\n// \t/>\r\n// </svg>\r\n// );\r\n\r\nexport default {\r\n\tcheckMark,\r\n\tedit,\r\n\tdollarSign,\r\n\tclockIcon,\r\n\tusersIcon,\r\n\tplusIcon,\r\n\tpencil\r\n};\r\n","import React, { Component } from 'react';\r\nimport './editParty.css';\r\nimport { plusIcon } from '../../../utils/icons/icons';\r\n// import { updatePartyData } from '../../../utils/helpers/helpers';\r\nclass EditParty extends Component {\r\n\tstate = {\r\n\t\tdescription : 'testttt'\r\n\t};\r\n\r\n\tonInputChange = (e) => {\r\n\t\tconsole.log(e.target.id);\r\n\t\tconsole.log(e.target.value);\r\n\t\tthis.setState({\r\n\t\t\t[e.target.id]: e.target.value\r\n\t\t});\r\n\t};\r\n\r\n\thandleSubmit = () => {\r\n\t\tthis.props.updatePartyData(this.props.partyId, 'description', this.state.description);\r\n\t\tthis.props.handleEditModalToggle();\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"edit-party-container\">\r\n\t\t\t\t<h2>Add Description</h2>\r\n\t\t\t\t<div className=\"input-container-wrapper\">\r\n\t\t\t\t\t<div className=\"input-container\">\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\tDescription\r\n\t\t\t\t\t\t\t<textarea onChange={this.onInputChange} value={this.state.value} id=\"description\" />\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div onClick={() => this.handleSubmit()} className=\"input-container-button\">\r\n\t\t\t\t\t\t<span>Add Description</span>\r\n\t\t\t\t\t\t<span>{plusIcon}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default EditParty;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport \"./css/partyCard.css\";\r\nimport { dollarSign } from \"../../../../utils/icons/icons\";\r\nimport * as moment from \"moment\";\r\n\r\nclass PartyCard extends Component {\r\n    state = {\r\n        timeRemaining: 60,\r\n        width: \"1%\",\r\n        isReservation: null,\r\n        isPaid: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isReservation: this.props.party.isReservation,\r\n            isPaid: this.props.party.paid\r\n        });\r\n\r\n        if (!this.props.party.isReservation) {\r\n            this.handleUpdateTimeRemaining();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.currentTime !== this.props.currentTime) {\r\n            this.handleUpdateTimeRemaining();\r\n        }\r\n    }\r\n\r\n    handleUpdateTimeRemaining = () => {\r\n        let currentTime = moment(this.props.currentTime, \"HH:mm:ss a\");\r\n        let endTime = moment(this.props.party.times.end, \"HH:mm:ss a\");\r\n        let duration = moment.duration(endTime.diff(currentTime));\r\n        let hours = parseInt(duration.asHours());\r\n        let timeLeft;\r\n        if (hours === 1) {\r\n            timeLeft = 60;\r\n        } else {\r\n            timeLeft = parseInt(duration.asMinutes()) % 60;\r\n        }\r\n\r\n        this.setState({\r\n            timeRemaining: timeLeft\r\n        });\r\n    };\r\n\r\n    handleButtonClick = () => {\r\n        if (!this.props.party.isReservation) {\r\n            this.props.handleRemoveParty(this.props.party.id, this.props.party.numberInParty);\r\n        } else {\r\n            this.props.handleEditModalToggle(this.props.party.id);\r\n            this.props.handleCheckReservation(this.props.party.id, this.props.party.numberInParty);\r\n            // this.handleStartCountdown();\r\n        }\r\n        console.log(\"CHECKED IN\");\r\n    };\r\n\r\n    handleIsPaidToggle = () => {\r\n        this.props.updatePartyData(this.props.party.id, \"paid\", !this.state.isPaid);\r\n        this.setState({\r\n            isPaid: !this.state.isPaid\r\n        });\r\n    };\r\n\r\n    handleFill = () => {\r\n        this.setState({\r\n            width: \"100%\"\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { name, description, numberInParty, isReservation, times, isUpcomingReservation } = this.props.party;\r\n\r\n        return (\r\n            <div\r\n                style={{\r\n                    backgroundColor: this.state.timeRemaining >= 1 ? \"#fbfbfb\" : \"#ffbaba\"\r\n                }}\r\n                // className={`party-wrapper ${this.state.isReservation ? 'reservation' : ''}`}\r\n                className=\"party-wrapper\"\r\n            >\r\n                <div\r\n                    // className=\"details-container\"\r\n                    className={`details-container ${isReservation && isUpcomingReservation ? \"reservation\" : \"\"}`}\r\n                    // style={{\r\n                    // \tbackgroundColor : isUpcomingReservation ? '#c9dfeb' : '#fbfbfb'\r\n                    // }}\r\n                >\r\n                    <div className=\"detail-row\" id=\"party-name\">\r\n                        <span id=\"title\"> Name: </span> <span id=\"name\"> {name} </span>{\" \"}\r\n                    </div>\r\n                    <div className=\"detail-row\" id=\"description\">\r\n                        <span className=\"details-title\"> Description: </span> <span className=\"details-value\"> {description} </span>{\" \"}\r\n                    </div>{\" \"}\r\n                    <div className=\"sub-details-container\">\r\n                        <div className=\"detail-row\" id=\"number-in-party\">\r\n                            <span className=\"details-title\"> Size: </span> <span className=\"details-value\"> {numberInParty} </span>{\" \"}\r\n                        </div>{\" \"}\r\n                        <div className=\"detail-row\" id=\"status\">\r\n                            <span className=\"details-title\"> Status: </span> <span className=\"details-value\"> {isReservation ? \"Reservation\" : \"In Room\"} </span>{\" \"}\r\n                        </div>{\" \"}\r\n                        <div\r\n                            onClick={() => {\r\n                                this.handleIsPaidToggle();\r\n                            }}\r\n                            className=\"detail-row\"\r\n                            id=\"payment\"\r\n                        >\r\n                            <span className=\"details-title\"> Paid: </span>{\" \"}\r\n                            <span\r\n                                style={{\r\n                                    color: this.state.isPaid ? \"#6fa037\" : \"#ff0000\"\r\n                                }}\r\n                                className=\"details-value\"\r\n                            >\r\n                                {dollarSign}{\" \"}\r\n                            </span>{\" \"}\r\n                        </div>{\" \"}\r\n                    </div>{\" \"}\r\n                </div>{\" \"}\r\n                <div className=\"time-remaining-cta-container\">\r\n                    <div className=\"time-remaining-container\">\r\n                        <span id=\"time-remaining\">\r\n                            <span id=\"title\"> {isReservation ? \"Reservation Time\" : \"Time Left\"}: </span>{\" \"}\r\n                            <span id=\"time\">\r\n                                {\" \"}\r\n                                {isReservation ? (\r\n                                    times.start\r\n                                ) : (\r\n                                    <Fragment>\r\n                                        <span> {this.state.timeRemaining} </span> <span> min </span>{\" \"}\r\n                                    </Fragment>\r\n                                )}{\" \"}\r\n                            </span>{\" \"}\r\n                        </span>{\" \"}\r\n                        <div className=\"time-start-end-container\">\r\n                            <div className=\"detail-row\" id=\"time-start\">\r\n                                <span className=\"details-title\"> Start: </span> <span className=\"details-value\"> {times.start} </span>{\" \"}\r\n                            </div>{\" \"}\r\n                            <div className=\"detail-row\" id=\"time-end\">\r\n                                <span className=\"details-title\"> End: </span> <span className=\"details-value\"> {times.end} </span>{\" \"}\r\n                            </div>{\" \"}\r\n                        </div>{\" \"}\r\n                    </div>{\" \"}\r\n                    <div className=\"cta-container\">\r\n                        <button\r\n                            onClick={() => {\r\n                                this.handleButtonClick();\r\n                            }}\r\n                            className=\"complete-btn\"\r\n                        >\r\n                            <span> {this.state.isReservation ? \"Check-In\" : \"Complete\"} </span>{\" \"}\r\n                            <div\r\n                                style={{\r\n                                    width: this.state.width\r\n                                }}\r\n                                className=\"fill\"\r\n                            />\r\n                        </button>{\" \"}\r\n                    </div>{\" \"}\r\n                </div>{\" \"}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PartyCard;\r\n","import * as moment from 'moment';\r\n\r\nexport function formatAMPM(date) {\r\n\tlet hours = date.getHours();\r\n\tlet minutes = date.getMinutes();\r\n\tlet ampm = hours >= 12 ? 'pm' : 'am';\r\n\thours = hours % 12;\r\n\thours = hours ? hours : 12; // the hour '0' should be '12'\r\n\tminutes = minutes < 10 ? '0' + minutes : minutes;\r\n\tlet currentTime = hours + ':' + minutes + '' + ampm;\r\n\treturn currentTime;\r\n}\r\n\r\nexport function checkIfMultiple(props) {}\r\n\r\nexport function checkifOverlap(props) {}\r\n\r\n//creates a new sorted array only containing specificed key\r\nexport function sortArrayByKey(party, key, value) {\r\n\tlet partiesList;\r\n\tpartiesList = party.filter((party) => {\r\n\t\treturn party[key] === value;\r\n\t});\r\n\tlet sortedPartiesList = partiesList.sort(function(p1, p2) {\r\n\t\tif (p1.times.timeStamp >= p2.times.timeStamp) {\r\n\t\t\treturn 1;\r\n\t\t} else {\r\n\t\t\t// moves larger to the top of array\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t});\r\n\r\n\treturn sortedPartiesList;\r\n}\r\n\r\n//sorts array ---> returns sorted array in select\r\nexport function sortPartyArray(party, rowNum, seperateByRow) {\r\n\tlet partiesList;\r\n\r\n\tif (seperateByRow) {\r\n\t\tpartiesList = party.filter((party) => {\r\n\t\t\treturn party.rowNum === rowNum;\r\n\t\t});\r\n\t} else {\r\n\t\tpartiesList = party;\r\n\t}\r\n\r\n\tlet sortedPartiesList = partiesList.sort(function(p1, p2) {\r\n\t\tif (p1.times.timeStamp >= p2.times.timeStamp) {\r\n\t\t\treturn 1;\r\n\t\t} else {\r\n\t\t\t// moves larger to the top of array\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t});\r\n\r\n\treturn sortedPartiesList;\r\n}\r\n\r\nexport function handleGetTimes() {\r\n\tlet times = {\r\n\t\tminute : moment().minute(),\r\n\t\thour   : moment().hour(),\r\n\t\tstart  : moment().format('h:mm A'),\r\n\t\tend    : moment().add('hours', 1).format('h:mm A')\r\n\t};\r\n\r\n\treturn times;\r\n}\r\n\r\nexport function getFilteredParty(id) {\r\n\tlet filteredParty = this.state.parties.filter((party) => {\r\n\t\treturn party.id === id;\r\n\t});\r\n\r\n\treturn filteredParty;\r\n}\r\n\r\nexport function updatePartyData(id, targetKey, value) {\r\n\tlet filteredParty = this.getFilteredParty(id);\r\n\tfilteredParty[0][targetKey] = value;\r\n}\r\n\r\nexport function handleUpdateTimes(id) {\r\n\tlet newTimes = handleGetTimes();\r\n\tlet filteredParty = this.getFilteredParty(id);\r\n\tfilteredParty[0].times.start = newTimes.times.start;\r\n\tfilteredParty[0].times.end = newTimes.times.end;\r\n}\r\n\r\nexport function addArrayByKey(array, key) {\r\n\tlet num = array.reduce(function(prev, cur) {\r\n\t\treturn prev + cur[key];\r\n\t}, 0);\r\n\treturn num;\r\n}\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\nimport \"./listOfParties.css\";\r\nimport PartyCard from \"./partyCard/partyCard\";\r\nimport { sortPartyArray } from \"../../../utils/helpers/helpers\";\r\nconst ListOfParties = props => {\r\n    const [parties, setParties] = useState([]);\r\n    const [reservations, setReservations] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let sortedPartiesList = sortPartyArray(props.parties, 1, true);\r\n        let sortedReservationsList = sortPartyArray(props.parties, 2, true);\r\n\r\n        setParties(sortedPartiesList);\r\n        setReservations(sortedReservationsList);\r\n    }, [props.parties]);\r\n\r\n    const mapList = array => {\r\n        return array.map(party => {\r\n            return (\r\n                <PartyCard\r\n                    modifyStateNum={props.modifyStateNum}\r\n                    countDownSpeed={props.countDownSpeed}\r\n                    currentTime={props.currentTime}\r\n                    key={party.id}\r\n                    handleRemoveParty={props.handleRemoveParty}\r\n                    handleCheckReservation={props.handleCheckReservation}\r\n                    party={party}\r\n                    updatePartyData={props.updatePartyData}\r\n                    handleEditModalToggle={props.handleEditModalToggle}\r\n                    updateCurrentPartyLists={props.updateCurrentPartyLists}\r\n                />\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div id=\"cattery\" className=\"row-container\">\r\n                <h2 className=\"title\">Current Occupancy ({props.currentOccupancy})</h2>\r\n                <div id=\"list-of-parties-container\">{mapList(parties)}</div>\r\n            </div>\r\n            <div id=\"reservations\" className=\"row-container\">\r\n                <h2 className=\"title\">Upcoming Reservations ({props.currentNumOfReservations})</h2>\r\n                <div id=\"list-of-parties-container\">\r\n                    <div id=\"list-of-parties-container\">{mapList(reservations)}</div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ListOfParties;\r\n","import React from 'react';\r\nimport Cattery from './components/cattery';\r\nimport './App.css';\r\nimport { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nlet socket;\r\n\r\nconst App = () => {\r\n\tconst [ socketState, setSocketState ] = useState([]);\r\n\tconst [ partyState, setPartyState ] = useState([]);\r\n\t// const ENDPOINT = 'localhost:5000';\r\n\tconst ENDPOINT = 'https://cattery-server.herokuapp.com/';\r\n\t//cors\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket = io(ENDPOINT);\r\n\t\tsocket.on('server_send', (server_data) => {\r\n\t\t\tsetSocketState(server_data);\r\n\t\t\tconsole.log(server_data);\r\n\t\t});\r\n\r\n\t\trefreshData();\r\n\t\treturn () => {\r\n\t\t\tsocket.emit('disconnect');\r\n\t\t};\r\n\t}, []);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tsetPartyState([ ...socketState ]);\r\n\t\t},\r\n\t\t[ socketState ]\r\n\t);\r\n\r\n\tlet refreshData = () => {\r\n\t\tsocket.emit('refresh_data');\r\n\t};\r\n\r\n\tlet clearData = () => {\r\n\t\tsocket.emit('client_send', []);\r\n\t};\r\n\r\n\t//make update state component. From here emit new state to socket/server.\r\n\tlet updateCatteryState = (state) => {\r\n\t\tsetPartyState(state);\r\n\t\t// setSocketState(state);\r\n\t\tsocket.emit('client_send', [ ...state ]);\r\n\t\tconsole.log('update statee');\r\n\t\t// socket.emit('client_send', newState);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Cattery updateCatteryState={updateCatteryState} parties={partyState} />\r\n\t\t\t<div onClick={clearData} className=\"refresh-data\">\r\n\t\t\t\tClear\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { checkMark } from '../../../../utils/icons/icons';\r\nimport './css/partySizeRow.css';\r\n\r\n// import { useState } from 'react';\r\n\r\nconst PartySizeRow = (props) => {\r\n\tconst { currentOccupancy, partySize, parties } = props;\r\n\r\n\t// const [ isAvailable, setIsAvailable ] = useState(false);\r\n\t// const [ nextTimeAvailable, setNextTimeAvailable ] = useState('');\r\n\t//   const [exitedGuests, setExitedGuests] = useState(currentOccupancy);\r\n\tconst spotsRemaining = 15 - currentOccupancy;\r\n\r\n\tlet getNextTime = () => {\r\n\t\t// let firstPartyEndTime = parties[0].times.end;\r\n\t\tlet newTime;\r\n\t\tlet numSpotsAvailable = 0;\r\n\r\n\t\tif (parties.length >= 1) {\r\n\t\t\tnumSpotsAvailable = spotsRemaining + parties[0].numberInParty || 0;\r\n\t\t}\r\n\t\tfor (let i = 0; i < parties.length; i++) {\r\n\t\t\t//14 <= 7 + 3\r\n\t\t\tif (partySize <= numSpotsAvailable) {\r\n\t\t\t\tnewTime = parties[i].times.end;\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tnewTime = parties[i].times.end;\r\n\t\t\t\tnumSpotsAvailable = numSpotsAvailable + parties[i].numberInParty;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn newTime;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div id=\"party-size1\" className=\"party-size-wrapper\">\r\n\t\t\t<div className=\"party-size\">{partySize}</div>\r\n\t\t\t<div className=\"next-available-time\">{partySize <= spotsRemaining ? checkMark : getNextTime()}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// this.getNextAvailableTime(partySize)\r\nexport default PartySizeRow;\r\n","import React from 'react';\r\nimport './css/partySizeAvailability.css';\r\nimport PartySizeRow from './partySizeRow/partySizeRow';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst PartySizeAvailability = ({ currentOccupancy, parties }) => {\r\n\tconst [ filteredParties, setFilteredParties ] = useState(parties);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tlet newParties = parties.filter((party) => {\r\n\t\t\t\treturn (party.rowNum === 1 || party.isUpcomingReservation === true) && party.isOverdue === false;\r\n\t\t\t});\r\n\r\n\t\t\tlet sortedParties = newParties.sort(function(p1, p2) {\r\n\t\t\t\tif (p1.times.timeStamp > p2.times.timeStamp) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// moves larger to the top of array\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// console.dir(parties);\r\n\t\t\t// console.dir(sortedParties);\r\n\r\n\t\t\tlet partyRows = Array.from(Array(15)).map((x, i) => (\r\n\t\t\t\t<PartySizeRow\r\n\t\t\t\t\tcurrentOccupancy={currentOccupancy}\r\n\t\t\t\t\tparties={sortedParties}\r\n\t\t\t\t\tpartySize={i + 1}\r\n\t\t\t\t\tkey={Math.random()}\r\n\t\t\t\t/>\r\n\t\t\t));\r\n\r\n\t\t\tsetFilteredParties(partyRows);\r\n\t\t},\r\n\t\t[ currentOccupancy, parties ]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div id=\"party-size-availability-container\">\r\n\t\t\t<h2>Walk-In Availability</h2>\r\n\t\t\t{filteredParties}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PartySizeAvailability;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./modal.css\";\r\n\r\nconst Modal = props => {\r\n  const plusIcon = (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      data-prefix=\"fas\"\r\n      data-icon=\"plus\"\r\n      className=\"svg-inline--fa fa-plus fa-w-14\"\r\n      role=\"img\"\r\n      viewBox=\"0 0 448 512\"\r\n    >\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"\r\n      />\r\n    </svg>\r\n  );\r\n\r\n  const modalContent = (\r\n    <div className=\"modal-container\">\r\n      <div onClick={props.click} className=\"backdrop\"></div>\r\n      <div id=\"modal\">\r\n        <div onClick={props.click} className=\"close-btn\">\r\n          {plusIcon}\r\n        </div>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(\r\n    modalContent,\r\n    document.getElementById(\"modal-hook\")\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { usersIcon } from \"../../utils/icons/icons\";\r\nimport { sortArrayByKey, addArrayByKey } from \"../../utils/helpers/helpers\";\r\n\r\nconst SpotsAvailable = ({ parties, currentOccupancy, currentNumOfUpcomingReservations, currentNumOverdue }) => {\r\n    const [numOfNonOverlap, setNumOfNonOverlap] = useState(0);\r\n    const [numOfSpotsAvailable, setNumOfSpotsAvailable] = useState(0);\r\n\r\n    let checkifOverlap = () => {\r\n        let upcomingReservationList = sortArrayByKey(parties, \"isUpcomingReservation\", true);\r\n        let overlapAdjustment = 0;\r\n        // console.log('LOOOOOOP STARTED');\r\n\r\n        if (parties.length >= 1 && upcomingReservationList.length >= 1) {\r\n            let row1 = sortArrayByKey(parties, \"rowNum\", 1);\r\n            let currentOccupancyList = sortArrayByKey(row1, \"isUpcomingReservation\", false);\r\n\r\n            //Arrays\r\n            let overlappingParties = [];\r\n            let nonOverlappingParties = [];\r\n\r\n            //Sums\r\n            let nonOverlappingParties__sum;\r\n            let upcomingReservations__sum;\r\n\r\n            //Sort parties into seperate arrays based on if they're overlapping\r\n            for (let i = 0; i < upcomingReservationList.length; i++) {\r\n                let reservationTime = upcomingReservationList[i].times.timeStamp;\r\n                currentOccupancyList.forEach(party => {\r\n                    let partyEndTime = party.times.timeStamp + 3600;\r\n                    if (partyEndTime >= reservationTime) {\r\n                        overlappingParties.push(party);\r\n                    } else {\r\n                        nonOverlappingParties.push(party);\r\n                    }\r\n                });\r\n            }\r\n\r\n            console.log(`overlap length: ${overlappingParties.length}`);\r\n            console.log(`nonOverlap length: ${nonOverlappingParties.length}`);\r\n            console.log(`upcomingReservationList length: ${upcomingReservationList.length}`);\r\n\r\n            if (nonOverlappingParties.length >= 1 && upcomingReservationList.length >= 1) {\r\n                if (nonOverlappingParties.length > 1) {\r\n                    nonOverlappingParties__sum = addArrayByKey(nonOverlappingParties, \"numberInParty\");\r\n                } else {\r\n                    nonOverlappingParties__sum = nonOverlappingParties[0].numberInParty;\r\n                }\r\n\r\n                if (upcomingReservationList.length > 1) {\r\n                    upcomingReservations__sum = addArrayByKey(upcomingReservationList, \"numberInParty\");\r\n                } else {\r\n                    upcomingReservations__sum = upcomingReservationList[0].numberInParty;\r\n                }\r\n\r\n                if (nonOverlappingParties__sum < upcomingReservations__sum) {\r\n                    overlapAdjustment = nonOverlappingParties__sum;\r\n                } else {\r\n                    overlapAdjustment = upcomingReservations__sum;\r\n                }\r\n            } else {\r\n                overlapAdjustment = 0;\r\n            }\r\n        }\r\n\r\n        console.log(`OVERLAP ADJUSTMENT:  ${overlapAdjustment}`);\r\n        setNumOfNonOverlap(overlapAdjustment);\r\n    };\r\n\r\n    useEffect(() => {\r\n        checkifOverlap();\r\n        let num = 15 - (currentOccupancy + currentNumOfUpcomingReservations - currentNumOverdue - numOfNonOverlap);\r\n        setNumOfSpotsAvailable(num);\r\n    }, [parties]);\r\n\r\n    // useEffect(\r\n    // \t() => {\r\n    // \t\thandleSendToServer();\r\n    // \t},\r\n    // \t[ numOfSpotsAvailable ]\r\n    // );\r\n\r\n    return (\r\n        <div id=\"current-spots remaining\" className=\"container\">\r\n            <span className=\"icon\">{usersIcon}</span>\r\n            <span className=\"primary-value  number-in-cattery\">\r\n                <span>{numOfSpotsAvailable}</span>\r\n                {currentNumOfUpcomingReservations === 0 ? \"\" : <div className=\"upcoming-reservations\">Includes {currentNumOfUpcomingReservations} Upcoming</div>}\r\n            </span>\r\n            <span className=\"open-spots\">Spots Available</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SpotsAvailable;\r\n","import React from 'react';\r\nimport { clockIcon } from '../../utils/icons/icons';\r\nimport SpotsAvailable from './spotsAvailable';\r\n\r\nconst Header = (props) => {\r\n\treturn (\r\n\t\t<div id=\"time-and-people-container\">\r\n\t\t\t<div id=\"current-time\" className=\"container\">\r\n\t\t\t\t<span className=\"icon\">{clockIcon}</span>\r\n\t\t\t\t<div className=\"primary-value\">\r\n\t\t\t\t\t{props.currentTime}\r\n\t\t\t\t\t{props.countDownSpeed === 110 ? <div className=\"test-mode\">Test Mode</div> : ''}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<SpotsAvailable\r\n\t\t\t\tparties={props.parties}\r\n\t\t\t\tcurrentOccupancy={props.currentOccupancy}\r\n\t\t\t\tcurrentNumOfUpcomingReservations={props.currentNumOfUpcomingReservations}\r\n\t\t\t\tcurrentNumOverdue={props.currentNumOverdue}\r\n\t\t\t\thandleSendToServer={props.handleSendToServer}\r\n\t\t\t/>\r\n\t\t\t<div id=\"current-occupancy\" className=\"container\">\r\n\t\t\t\t<span className=\"primary-value  number-in-cattery\">\r\n\t\t\t\t\t<span>{props.totalGuests}</span>\r\n\t\t\t\t</span>\r\n\t\t\t\t<span className=\"open-spots\">Total Guests Today</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Input = props => {\r\n\treturn (\r\n\t\t<div className=\"input-container\">\r\n\t\t\t<label>{props.label}</label>\r\n\t\t\t<input\r\n\t\t\t\tonChange={props.onChange}\r\n\t\t\t\tstyle={props.style}\r\n\t\t\t\tid={props.id}\r\n\t\t\t\tclassName={props.class}\r\n\t\t\t\ttype={props.type}\r\n\t\t\t\tvalue={props.value}\r\n\t\t\t\tplaceholder={props.placeholder}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Input;\r\n","import React, { Component } from 'react';\r\nimport TimeKeeper from 'react-timekeeper';\r\nimport './css/timeKeeperCSS/timeKeeper.css';\r\nimport { pencil } from '../../../utils/icons/icons';\r\nimport * as moment from 'moment';\r\n\r\nclass TimePicker extends Component {\r\n\tstate = {\r\n\t\tisOpen    : true,\r\n\t\t// timeStart : null,\r\n\t\t// timeEnd   : null,\r\n\t\tstart     : null,\r\n\t\tend       : null,\r\n\t\thour      : null,\r\n\t\tminute    : null,\r\n\t\ttimeStamp : null\r\n\t};\r\n\r\n\thandleUpdateTime = (time) => {\r\n\t\t// console.log(time.formatted.toString().toUpperCase());\r\n\t\t// console.log(time);\r\n\t\t// console.log(time.hour);\r\n\t\t// console.log(time.minute);\r\n\t\tlet formattedTime = time.formatted.toString().toUpperCase();\r\n\t\tlet startTime = moment(formattedTime, 'h:mmA').format('h:mm A');\r\n\t\tlet endTime = moment(formattedTime, 'h:mmA').add('hours', 1).format('h:mm A');\r\n\t\tlet currentDate = moment().format('D-MM-YYYY').toString();\r\n\t\tlet timeStamp = moment(`${currentDate} ${startTime}`, 'D-MM-YYYY h:mmA').unix();\r\n\r\n\t\tconsole.log(timeStamp);\r\n\r\n\t\tthis.setState({\r\n\t\t\tstart     : startTime,\r\n\t\t\tend       : endTime,\r\n\t\t\thour      : time.hour24,\r\n\t\t\tminute    : time.minute,\r\n\t\t\ttimeStamp : timeStamp\r\n\t\t});\r\n\t};\r\n\r\n\ttoggleOpenTimeKeeper = () => {\r\n\t\tthis.setState({\r\n\t\t\tisOpen : !this.state.isOpen\r\n\t\t});\r\n\t};\r\n\r\n\tupdateData = () => {\r\n\t\tthis.props.handleUpdateReservation(this.state);\r\n\t\tthis.toggleOpenTimeKeeper();\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst editContainer = (\r\n\t\t\t<div className=\"edit-container\">\r\n\t\t\t\t<span id=\"title\" className=\"reservation-time\">\r\n\t\t\t\t\tReservation:\r\n\t\t\t\t</span>\r\n\t\t\t\t<span id=\"time\" className=\"reservation-time\">\r\n\t\t\t\t\t{this.state.start}\r\n\t\t\t\t</span>\r\n\t\t\t\t<button onClick={this.toggleOpenTimeKeeper} className=\"save-btn\">\r\n\t\t\t\t\t{pencil}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t\tconst timePickerContainer = (\r\n\t\t\t<div className=\"time-picker-container\">\r\n\t\t\t\t<button onClick={this.updateData} className=\"save-btn\">\r\n\t\t\t\t\tSave\r\n\t\t\t\t</button>\r\n\t\t\t\t<TimeKeeper time={this.state.timeStart} onChange={(newTime) => this.handleUpdateTime(newTime)} />\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t\treturn <div className=\"time-input-container\">{this.state.isOpen ? timePickerContainer : editContainer}</div>;\r\n\t}\r\n}\r\n\r\nexport default TimePicker;\r\n","import React, { Component } from 'react';\r\nimport Input from '../../../utils/input/input';\r\nimport TimePicker from './timeKeeper';\r\nimport { plusIcon } from '../../../utils/icons/icons';\r\nimport * as moment from 'moment';\r\nimport './css/addParty.css';\r\n\r\nclass AddParty extends Component {\r\n\tstate = {\r\n\t\tdescription           : null,\r\n\t\treservationTime       : null,\r\n\t\tid                    : null,\r\n\t\tisReservation         : false,\r\n\t\tisOverdue             : false,\r\n\t\tisUpcomingReservation : false,\r\n\t\tisOverlap             : false,\r\n\t\tname                  : null,\r\n\t\tnumberInParty         : 1,\r\n\t\tpaid                  : true,\r\n\t\trowNum                : 1,\r\n\t\ttimes                 : {\r\n\t\t\tminute    : null,\r\n\t\t\thour      : null,\r\n\t\t\tstart     : null,\r\n\t\t\tend       : null,\r\n\t\t\ttimeStamp : null\r\n\t\t}\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tlet startTime = moment().format('h:mm A');\r\n\t\tlet currentDate = moment().format('D-MM-YYYY').toString();\r\n\t\tlet timeStamp = moment(`${currentDate} ${startTime}`, 'D-MM-YYYY h:mmA').unix();\r\n\t\tlet times = {\r\n\t\t\tminute    : moment().minute(),\r\n\t\t\thour      : moment().hour(),\r\n\t\t\tstart     : startTime,\r\n\t\t\tend       : moment().add('hours', 1).format('h:mm A'),\r\n\t\t\ttimeStamp : timeStamp\r\n\t\t};\r\n\t\tthis.setState({\r\n\t\t\t// timeStart : startTime,\r\n\t\t\t// timeEnd   : endTime,\r\n\t\t\tid    : Math.random() * 10,\r\n\t\t\ttimes : times\r\n\t\t});\r\n\t}\r\n\r\n\taddParty = (party, numOfNewPeople, isReservation) => {\r\n\t\tthis.props.handleAddParty(party, numOfNewPeople, isReservation);\r\n\t};\r\n\r\n\thandleUpdateReservation = (data) => {\r\n\t\t// let times = { start: data.timeStart, end: data.timeEnd };\r\n\t\tlet times = {\r\n\t\t\tminute    : data.minute,\r\n\t\t\thour      : data.hour,\r\n\t\t\tstart     : data.start,\r\n\t\t\tend       : data.end,\r\n\t\t\ttimeStamp : data.timeStamp\r\n\t\t};\r\n\t\tthis.setState({\r\n\t\t\trowNum : 2,\r\n\t\t\ttimes  : times\r\n\t\t});\r\n\t};\r\n\r\n\thandleUpdateNumOfPeople = (num) => {\r\n\t\tthis.setState({\r\n\t\t\tnumberInParty : num\r\n\t\t});\r\n\t};\r\n\r\n\tonInputChange = (e) => {\r\n\t\tif (e.target.id === 'numberInParty') {\r\n\t\t\tlet inputs = document.querySelectorAll('.btn-radio input');\r\n\t\t\tconsole.log(inputs[2]);\r\n\t\t\tinputs.forEach((input) => (input.checked = false));\r\n\t\t}\r\n\t\tconsole.log(e.target.id);\r\n\t\tconsole.log(e.target.value);\r\n\t\tthis.setState({\r\n\t\t\t[e.target.id]: e.target.value\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst pasrtyDescription = (\r\n\t\t\t<div className=\"input-container\">\r\n\t\t\t\t<label htmlFor=\"\">\r\n\t\t\t\t\tDescription <textarea onChange={this.onInputChange} value={this.state.value} id=\"description\" />\r\n\t\t\t\t</label>{' '}\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t\tconst partyName = (\r\n\t\t\t<Input\r\n\t\t\t\tclassName=\"input-container\"\r\n\t\t\t\tonChange={this.onInputChange}\r\n\t\t\t\tid=\"name\"\r\n\t\t\t\tlabel=\"Party Name:\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tconst partyType = (\r\n\t\t\t<div id=\"walkIn-res__container\">\r\n\t\t\t\t<span className=\"title\"> Party Type </span>{' '}\r\n\t\t\t\t<div className=\"walkIn-res__wrapper\">\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tisReservation : false\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\tid=\"walk-on\"\r\n\t\t\t\t\t\tclassName={`walkIn-res__btn ${!this.state.isReservation ? 'active' : ''}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tWalk - In{' '}\r\n\t\t\t\t\t</span>{' '}\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tisReservation : true\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\tid=\"reservation\"\r\n\t\t\t\t\t\tclassName={`walkIn-res__btn ${this.state.isReservation ? 'active' : ''}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tReservation{' '}\r\n\t\t\t\t\t</span>{' '}\r\n\t\t\t\t</div>{' '}\r\n\t\t\t\t{this.state.isReservation ? (\r\n\t\t\t\t\t<TimePicker\r\n\t\t\t\t\t\ttimeStart={this.state.times.start}\r\n\t\t\t\t\t\treservationTime={this.state.reservationTime}\r\n\t\t\t\t\t\ttime={this.state.times.start}\r\n\t\t\t\t\t\thandleUpdateReservation={this.handleUpdateReservation}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t''\r\n\t\t\t\t)}{' '}\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t\tconst partyPayment = (\r\n\t\t\t<div id=\"payment-container\">\r\n\t\t\t\t<span className=\"title\"> Payment </span>{' '}\r\n\t\t\t\t<div className=\"walkIn-res__wrapper\">\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tpaid : true\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\tid=\"paid__yes\"\r\n\t\t\t\t\t\tclassName={`walkIn-res__btn ${this.state.paid ? 'active' : ''}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tPaid{' '}\r\n\t\t\t\t\t</span>{' '}\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tpaid : false\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\tid=\"paid__no\"\r\n\t\t\t\t\t\tclassName={`walkIn-res__btn ${!this.state.paid ? 'active' : ''}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tNot Paid{' '}\r\n\t\t\t\t\t</span>{' '}\r\n\t\t\t\t</div>{' '}\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t\tconst partyNum = (\r\n\t\t\t<div id=\"num-of-people\" className=\"input-container\">\r\n\t\t\t\t<label> Select# of People in Party: </label>{' '}\r\n\t\t\t\t<div className=\"select-option-container\">\r\n\t\t\t\t\t<div className=\"radio-container\">\r\n\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\thtmlFor=\"\"\r\n\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\tnumberInParty : 1\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\thtmlFor=\"radio-1\"\r\n\t\t\t\t\t\t\tclassName=\"btn-radio\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<input type=\"radio\" id=\"radio-1\" name=\"radio-grp\" />\r\n\t\t\t\t\t\t\t<svg width=\"20px\" height=\"20px\" viewBox=\"0 0 20 20\">\r\n\t\t\t\t\t\t\t\t<circle cx=\"10\" cy=\"10\" r=\"9\" />\r\n\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\td=\"M10,7 C8.34314575,7 7,8.34314575 7,10 C7,11.6568542 8.34314575,13 10,13 C11.6568542,13 13,11.6568542 13,10 C13,8.34314575 11.6568542,7 10,7 Z\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"inner\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\td=\"M10,1 L10,1 L10,1 C14.9705627,1 19,5.02943725 19,10 L19,10 L19,10 C19,14.9705627 14.9705627,19 10,19 L10,19 L10,19 C5.02943725,19 1,14.9705627 1,10 L1,10 L1,10 C1,5.02943725 5.02943725,1 10,1 L10,1 Z\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"outer\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</svg>{' '}\r\n\t\t\t\t\t\t\t<span> 1 </span>{' '}\r\n\t\t\t\t\t\t</label>{' '}\r\n\t\t\t\t\t</div>{' '}\r\n\t\t\t\t\t<div className=\"radio-container\">\r\n\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\thtmlFor=\"\"\r\n\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\tnumberInParty : 2\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\thtmlFor=\"radio-2\"\r\n\t\t\t\t\t\t\tclassName=\"btn-radio\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<input type=\"radio\" id=\"radio-2\" name=\"radio-grp\" />\r\n\t\t\t\t\t\t\t<svg width=\"20px\" height=\"20px\" viewBox=\"0 0 20 20\">\r\n\t\t\t\t\t\t\t\t<circle cx=\"10\" cy=\"10\" r=\"9\" />\r\n\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\td=\"M10,7 C8.34314575,7 7,8.34314575 7,10 C7,11.6568542 8.34314575,13 10,13 C11.6568542,13 13,11.6568542 13,10 C13,8.34314575 11.6568542,7 10,7 Z\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"inner\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\td=\"M10,1 L10,1 L10,1 C14.9705627,1 19,5.02943725 19,10 L19,10 L19,10 C19,14.9705627 14.9705627,19 10,19 L10,19 L10,19 C5.02943725,19 1,14.9705627 1,10 L1,10 L1,10 C1,5.02943725 5.02943725,1 10,1 L10,1 Z\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"outer\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</svg>{' '}\r\n\t\t\t\t\t\t\t<span> 2 </span>{' '}\r\n\t\t\t\t\t\t</label>{' '}\r\n\t\t\t\t\t</div>{' '}\r\n\t\t\t\t\t<div className=\"radio-container\">\r\n\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\thtmlFor=\"\"\r\n\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\tnumberInParty : 3\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\thtmlFor=\"radio-3\"\r\n\t\t\t\t\t\t\tclassName=\"btn-radio\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<input type=\"radio\" id=\"radio-3\" name=\"radio-grp\" />\r\n\t\t\t\t\t\t\t<svg width=\"20px\" height=\"20px\" viewBox=\"0 0 20 20\">\r\n\t\t\t\t\t\t\t\t<circle cx=\"10\" cy=\"10\" r=\"9\" />\r\n\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\td=\"M10,7 C8.34314575,7 7,8.34314575 7,10 C7,11.6568542 8.34314575,13 10,13 C11.6568542,13 13,11.6568542 13,10 C13,8.34314575 11.6568542,7 10,7 Z\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"inner\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\td=\"M10,1 L10,1 L10,1 C14.9705627,1 19,5.02943725 19,10 L19,10 L19,10 C19,14.9705627 14.9705627,19 10,19 L10,19 L10,19 C5.02943725,19 1,14.9705627 1,10 L1,10 L1,10 C1,5.02943725 5.02943725,1 10,1 L10,1 Z\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"outer\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</svg>{' '}\r\n\t\t\t\t\t\t\t<span> 3 </span>{' '}\r\n\t\t\t\t\t\t</label>{' '}\r\n\t\t\t\t\t</div>{' '}\r\n\t\t\t\t\t<div className=\"radio-container\">\r\n\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\thtmlFor=\"\"\r\n\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\tnumberInParty : 4\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\thtmlFor=\"radio-4\"\r\n\t\t\t\t\t\t\tclassName=\"btn-radio\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<input type=\"radio\" id=\"radio-4\" name=\"radio-grp\" />\r\n\t\t\t\t\t\t\t<svg width=\"20px\" height=\"20px\" viewBox=\"0 0 20 20\">\r\n\t\t\t\t\t\t\t\t<circle cx=\"10\" cy=\"10\" r=\"9\" />\r\n\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\td=\"M10,7 C8.34314575,7 7,8.34314575 7,10 C7,11.6568542 8.34314575,13 10,13 C11.6568542,13 13,11.6568542 13,10 C13,8.34314575 11.6568542,7 10,7 Z\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"inner\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\td=\"M10,1 L10,1 L10,1 C14.9705627,1 19,5.02943725 19,10 L19,10 L19,10 C19,14.9705627 14.9705627,19 10,19 L10,19 L10,19 C5.02943725,19 1,14.9705627 1,10 L1,10 L1,10 C1,5.02943725 5.02943725,1 10,1 L10,1 Z\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"outer\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</svg>{' '}\r\n\t\t\t\t\t\t\t<span> 4 </span>{' '}\r\n\t\t\t\t\t\t</label>{' '}\r\n\t\t\t\t\t</div>{' '}\r\n\t\t\t\t\t<div className=\"radio-container\">\r\n\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\thtmlFor=\"\"\r\n\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\tnumberInParty : 5\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\thtmlFor=\"radio-5\"\r\n\t\t\t\t\t\t\tclassName=\"btn-radio\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<input type=\"radio\" id=\"radio-5\" name=\"radio-grp\" />\r\n\t\t\t\t\t\t\t<svg width=\"20px\" height=\"20px\" viewBox=\"0 0 20 20\">\r\n\t\t\t\t\t\t\t\t<circle cx=\"10\" cy=\"10\" r=\"9\" />\r\n\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\td=\"M10,7 C8.34314575,7 7,8.34314575 7,10 C7,11.6568542 8.34314575,13 10,13 C11.6568542,13 13,11.6568542 13,10 C13,8.34314575 11.6568542,7 10,7 Z\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"inner\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\td=\"M10,1 L10,1 L10,1 C14.9705627,1 19,5.02943725 19,10 L19,10 L19,10 C19,14.9705627 14.9705627,19 10,19 L10,19 L10,19 C5.02943725,19 1,14.9705627 1,10 L1,10 L1,10 C1,5.02943725 5.02943725,1 10,1 L10,1 Z\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"outer\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</svg>{' '}\r\n\t\t\t\t\t\t\t<span> 5 </span>{' '}\r\n\t\t\t\t\t\t</label>{' '}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<select onChange={this.onInputChange} id=\"numberInParty\" valuename=\"number-of-people\">\r\n\t\t\t\t\t\t<option value=\"\" disabled defaultValue>\r\n\t\t\t\t\t\t\t6 +\r\n\t\t\t\t\t\t</option>{' '}\r\n\t\t\t\t\t\t<option value=\"6\"> 6 </option> <option value=\"7\"> 7 </option> <option value=\"8\"> 8 </option>{' '}\r\n\t\t\t\t\t\t<option value=\"9\"> 9 </option> <option value=\"10\"> 10 </option> <option value=\"11\"> 11 </option>{' '}\r\n\t\t\t\t\t\t<option value=\"12\"> 12 </option> <option value=\"13\"> 13 </option>{' '}\r\n\t\t\t\t\t\t<option value=\"14\"> 14 </option> <option value=\"15\"> 15 </option>{' '}\r\n\t\t\t\t\t</select>{' '}\r\n\t\t\t\t</div>{' '}\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<div id=\"add-people-container\">\r\n\t\t\t\t<h2> Add Party </h2>{' '}\r\n\t\t\t\t<div className=\"input-container-wrapper\">\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\t{partyType} {partyName} {!this.state.isReservation ? pasrtyDescription : ''} {partyNum}{' '}\r\n\t\t\t\t\t{partyPayment}\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\tthis.addParty([ this.state ], this.state.numberInParty, this.state.isReservation)}\r\n\t\t\t\t\t\tclassName=\"input-container-button\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span> Add Party </span> <span> {plusIcon} </span>{' '}\r\n\t\t\t\t\t</div>{' '}\r\n\t\t\t\t</div>{' '}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AddParty;\r\n","import React from 'react';\r\nimport AddParty from '../cattery/addParty/addParty';\r\n\r\nconst AddUser = (props) => {\r\n\treturn (\r\n\t\t<div id=\"number-of-people-container\">\r\n\t\t\t<AddParty handleAddParty={props.handleAddParty} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AddUser;\r\n","import React from 'react';\r\n\r\nimport { plusIcon } from '../../utils/icons/icons';\r\n\r\nconst AddPartyButton = (props) => {\r\n\treturn (\r\n\t\t<span onClick={props.handleModalToggle} className=\"modal-btn\">\r\n\t\t\t<span className=\"text\"> ADD PARTY</span>\r\n\t\t\t<span className=\"btn\"> {plusIcon}</span>\r\n\t\t</span>\r\n\t);\r\n};\r\n\r\nexport default AddPartyButton;\r\n","import React, { Component, Fragment } from 'react';\r\nimport EditParty from './cattery/editParty/editParty';\r\nimport ListOfParties from './cattery/listOfParties/listOfParties';\r\nimport PartySizeAvailability from './cattery/partySizeAvailability/partySizeAvailability';\r\nimport Modal from '../utils/modal/modal';\r\nimport Header from './ui-components/header';\r\nimport AddUser from './ui-components/addUser';\r\nimport AddPartyButton from './ui-components/addPartyButton';\r\nimport { handleGetTimes, sortArrayByKey, addArrayByKey } from '../utils/helpers/helpers';\r\nimport './css/cattery.css';\r\nimport * as moment from 'moment';\r\n\r\nclass Cattery extends Component {\r\n\tstate = {\r\n\t\tcountDownSpeed                   : 60000,\r\n\t\tcurrentNumOfReservations         : 0,\r\n\t\tcurrentNumOfUpcomingReservations : 0,\r\n\t\tcurrentNumOverdue                : 0,\r\n\t\tcurrentOccupancy                 : 0,\r\n\t\tcurrentTime                      : '2:10 PM',\r\n\t\tisEditMode                       : false,\r\n\t\tmodalIsOpen                      : false,\r\n\t\tparties                          : [],\r\n\t\ttotalGuests                      : 0,\r\n\t\ttimes                            : {\r\n\t\t\tminute              : null,\r\n\t\t\thour                : null,\r\n\t\t\tcurrentTime         : null,\r\n\t\t\tcurrentTimePlusHour : null\r\n\t\t}\r\n\t};\r\n\r\n\t//LIST OF ACTIONS\r\n\t//- Toggle Payment\r\n\t//- Add current party\r\n\t//- Remove current party (mark complete)\r\n\t//- Add reservation party\r\n\t//- Check in reservation party\r\n\t//- Change reservation to upcoming party when within 1 hour\r\n\t//- Change reservation to upcoming party\r\n\t//- Move Reservation from Row 2 to Row 1 when start time is equal to current time\r\n\t//- Detect if parties overlap with reservation\r\n\r\n\t//sets Current Time  and Num of People in each array\r\n\tcomponentDidMount() {\r\n\t\tlet currentTime = moment().format('h:mm A');\r\n\t\tlet currentDate = moment().format('D-MM-YYYY').toString();\r\n\t\tlet times = {\r\n\t\t\tminute              : moment().minute(),\r\n\t\t\thour                : moment().hour(),\r\n\t\t\tcurrentTime         : currentTime,\r\n\t\t\tcurrentTimePlusHour : moment().add('hours', 1).format('h:mm A'),\r\n\t\t\ttimeStamp           : moment(`${currentDate} ${currentTime}`, 'D-MM-YYYY h:mmA').unix()\r\n\t\t};\r\n\t\tsetInterval(this.checkPartyStartTimes, 1000);\r\n\t\tconsole.log(this.props.partyState);\r\n\r\n\t\tthis.setState({\r\n\t\t\ttimes : times\r\n\t\t\t// parties: this.props.parties\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (prevProps.parties !== this.props.parties) {\r\n\t\t\tconsole.log('incoming parties', this.props.parties.length);\r\n\t\t\tlet sumOfNewCurrentOccupancy = 0;\r\n\t\t\tlet sumOfNewCurrentNumOfReservations = 0;\r\n\t\t\tlet sumOfNewCurrentNumOfUpcomingReservations = 0;\r\n\t\t\tlet sumOfNewCurrentNumOverdue = 0;\r\n\t\t\tlet sumOfNewTotalGuests = 0;\r\n\t\t\tif (this.props.parties.length >= 1) {\r\n\t\t\t\tlet newParties = sortArrayByKey(this.props.parties, 'isReservation', false);\r\n\t\t\t\tsumOfNewCurrentOccupancy = addArrayByKey(newParties, 'numberInParty') || 0;\r\n\t\t\t\tconsole.log(`Current Occupancy: ${sumOfNewCurrentOccupancy}`);\r\n\r\n\t\t\t\tlet newPartiesReservations = sortArrayByKey(this.props.parties, 'isReservation', true);\r\n\t\t\t\tsumOfNewCurrentNumOfReservations = addArrayByKey(newPartiesReservations, 'numberInParty') || 0;\r\n\t\t\t\tconsole.log(`Reservations: ${sumOfNewCurrentNumOfReservations}`);\r\n\r\n\t\t\t\tlet newUpcomingReservations = sortArrayByKey(this.props.parties, 'isUpcomingReservation', true);\r\n\t\t\t\tsumOfNewCurrentNumOfUpcomingReservations = addArrayByKey(newUpcomingReservations, 'numberInParty') || 0;\r\n\t\t\t\tconsole.log(`Reservations: ${sumOfNewCurrentNumOfUpcomingReservations}`);\r\n\r\n\t\t\t\tlet newOverdueList = sortArrayByKey(this.props.parties, 'isOverdue', true);\r\n\t\t\t\tsumOfNewCurrentNumOverdue = addArrayByKey(newOverdueList, 'numberInParty') || 0;\r\n\t\t\t\tconsole.log(`Reservations: ${sumOfNewCurrentNumOverdue}`);\r\n\t\t\t}\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tparties                          : this.props.parties,\r\n\t\t\t\tcurrentOccupancy                 : sumOfNewCurrentOccupancy,\r\n\t\t\t\tcurrentNumOfReservations         : sumOfNewCurrentNumOfReservations,\r\n\t\t\t\tcurrentNumOfUpcomingReservations : sumOfNewCurrentNumOfUpcomingReservations,\r\n\t\t\t\tcurrentNumOverdue                : sumOfNewCurrentNumOverdue,\r\n\t\t\t\ttotalGuests                      : sumOfNewTotalGuests\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcheckPartyStartTimes = () => {\r\n\t\tlet currentTime = moment().format('h:mm A');\r\n\t\tlet currentDate = moment().format('D-MM-YYYY').toString();\r\n\t\tlet times = {\r\n\t\t\tminute              : moment().minute(),\r\n\t\t\thour                : moment().hour(),\r\n\t\t\tcurrentTime         : currentTime,\r\n\t\t\tcurrentTimePlusHour : moment().add('hours', 1).format('h:mm A'),\r\n\t\t\ttimeStamp           : moment(`${currentDate} ${currentTime}`, 'D-MM-YYYY h:mmA').unix()\r\n\t\t};\r\n\r\n\t\tfor (let i = 0; i < this.state.parties.length; i++) {\r\n\t\t\tlet party = this.state.parties;\r\n\r\n\t\t\t// -- Make party upcoming  if timestamp difference of party and state is <= 3600\r\n\t\t\tif (\r\n\t\t\t\tparty[i].times.timeStamp - this.state.times.timeStamp <= 3600 &&\r\n\t\t\t\tparty[i].isUpcomingReservation === false &&\r\n\t\t\t\tparty[i].rowNum === 2\r\n\t\t\t) {\r\n\t\t\t\tconsole.log('Match');\r\n\t\t\t\tparty[i].isUpcomingReservation = true;\r\n\t\t\t\tthis.handleSendToServer();\r\n\t\t\t\t// this.modifyStateNum(party[i].numberInParty, 'currentNumOfUpcomingReservations');\r\n\t\t\t}\r\n\r\n\t\t\t// -- Move party if timeStart is equal to currentTime\r\n\t\t\tif (party[i].times.start === this.state.times.currentTime && party[i].rowNum !== 1) {\r\n\t\t\t\tparty[i].isUpcomingReservation = true;\r\n\t\t\t\tparty[i].rowNum = 1;\r\n\t\t\t\t// this.handleMoveParty(party[i].id, 1);\r\n\t\t\t\tthis.handleSendToServer();\r\n\t\t\t\t// this.modifyStateNum(party[i].numberInParty, 'currentNumOfUpcomingReservations');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\ttimes : times\r\n\t\t});\r\n\t};\r\n\r\n\thandleAddParty = (party, numOfNewPeople, isReservation) => {\r\n\t\t// if (isReservation) {\r\n\t\t// \tthis.modifyStateNum(numOfNewPeople, 'currentNumOfReservations');\r\n\t\t// } else {\r\n\t\t// \t//   this.modifyStateNum(numOfNewPeople, \"currentOccupancy\");\r\n\t\t// \tthis.modifyCurrentOccupancy(numOfNewPeople, false);\r\n\t\t// }\r\n\t\t// this.modifyStateNum(numOfNewPeople);\r\n\t\tlet newPartyList = [ ...this.state.parties, ...party ];\r\n\t\tthis.props.updateCatteryState(newPartyList);\r\n\t\tthis.setState({\r\n\t\t\t// parties     : newPartyList,\r\n\t\t\tmodalIsOpen : false\r\n\t\t});\r\n\t};\r\n\r\n\thandleCheckReservation = (id, numOfNewPeople) => {\r\n\t\tlet filteredParty = this.getFilteredParty(id);\r\n\t\tlet newTimes = handleGetTimes();\r\n\r\n\t\tfilteredParty[0].rowNum = 1;\r\n\t\tfilteredParty[0].isReservation = false;\r\n\t\tfilteredParty[0].times.start = newTimes.start;\r\n\t\tfilteredParty[0].times.end = newTimes.end;\r\n\t\tfilteredParty[0].rowNum = 1;\r\n\t\t// let numOfUpcoming = filteredParty[0].isUpcomingReservation ? Number(numOfNewPeople) : 0;\r\n\t\t// this.handleMoveParty(id, 1);\r\n\t\t// this.modifyStateNum(numOfNewPeople, \"currentOccupancy\")\r\n\t\t// this.modifyCurrentOccupancy(numOfNewPeople, false);\r\n\t\t// this.modifyStateNum(numOfNewPeople, 'currentNumOfReservations', true);\r\n\t\t// this.modifyStateNum(numOfUpcoming, 'currentNumOfUpcomingReservations', true);\r\n\t\tlet updatedParties = this.state.parties;\r\n\t\tthis.props.updateCatteryState([ ...updatedParties ]);\r\n\t\t// if (filteredParty[0].isUpcomingReservation) {\r\n\t\t// \tfilteredParty[0].isUpcomingReservation = false;\r\n\t\t// }\r\n\t};\r\n\r\n\thandleEditModalToggle = (id) => {\r\n\t\tthis.handleModalToggle();\r\n\t\tthis.setState({\r\n\t\t\tisEditMode     : !this.state.isEditMode,\r\n\t\t\tcurrentPartyId : id || null\r\n\t\t});\r\n\t};\r\n\r\n\thandleModalToggle = () => {\r\n\t\tthis.setState({\r\n\t\t\tmodalIsOpen : !this.state.modalIsOpen,\r\n\t\t\tisEditMode  : false\r\n\t\t});\r\n\t};\r\n\r\n\thandleMoveParty = (id, destinationRow) => {\r\n\t\t//Returns the party\r\n\t\tlet filteredArray = this.state.parties.filter((party) => {\r\n\t\t\treturn party.id !== id;\r\n\t\t});\r\n\r\n\t\tlet filteredParty = this.getFilteredParty(id);\r\n\t\tconsole.dir(filteredParty[0]);\r\n\t\tfilteredParty[0].rowNum = destinationRow;\r\n\r\n\t\tlet newPartyArray = [ ...filteredArray, ...filteredParty ];\r\n\r\n\t\tthis.setState({\r\n\t\t\t//this is where i would put emitter function\r\n\t\t\tparties : newPartyArray\r\n\t\t});\r\n\t};\r\n\r\n\thandleRemoveParty = (id, numInParty) => {\r\n\t\tconsole.log('Updated Remove Started');\r\n\t\tlet updatedParties = this.state.parties.filter((party) => {\r\n\t\t\treturn party.id !== id;\r\n\t\t});\r\n\t\tlet party = this.getFilteredParty(id);\r\n\r\n\t\tlet overDueNum = party[0].isOverdue ? numInParty : 0;\r\n\t\t// this.modifyStateNum(numInParty, \"currentOccupancy\", true);\r\n\t\t// this.modifyCurrentOccupancy(numInParty, true);\r\n\t\t// this.modifyStateNum(numInParty, 'totalGuests');\r\n\t\t// this.modifyStateNum(overDueNum, 'currentNumOverdue', true);\r\n\t\tthis.setState({\r\n\t\t\tparties : [ ...updatedParties ]\r\n\t\t});\r\n\t\tconsole.log('Updated Remove', [ ...updatedParties ]);\r\n\r\n\t\tthis.props.updateCatteryState([ ...updatedParties ]);\r\n\t};\r\n\r\n\t//Returns specified party\r\n\tgetFilteredParty = (id) => {\r\n\t\tlet filteredParty = this.state.parties.filter((party) => {\r\n\t\t\treturn party.id === id;\r\n\t\t});\r\n\r\n\t\treturn filteredParty;\r\n\t};\r\n\r\n\t// Updates start/end times\r\n\thandleUpdateTimes = (id) => {\r\n\t\tlet newTimes = handleGetTimes();\r\n\t\tlet filteredParty = this.getFilteredParty(id);\r\n\t\tfilteredParty[0].times.start = newTimes.times.start;\r\n\t\tfilteredParty[0].times.end = newTimes.times.end;\r\n\t};\r\n\r\n\t//Updates party data property\r\n\tupdatePartyData = (id, targetKey, value) => {\r\n\t\tlet filteredParty = this.getFilteredParty(id);\r\n\t\tfilteredParty[0][targetKey] = value;\r\n\t\tthis.handleSendToServer();\r\n\t};\r\n\r\n\tmodifyStateNum = (num, stateName, isSubtract) => {\r\n\t\tif (isSubtract) {\r\n\t\t\tthis.setState({\r\n\t\t\t\t[stateName] : Number(this.state[stateName]) - Number(num)\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\t[stateName] : Number(this.state[stateName]) + Number(num)\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tmodifyCurrentOccupancy = (num, isSubtract) => {\r\n\t\tlet currentOccupancyList__rowNum = sortArrayByKey(this.state.parties, 'rowNum', 1);\r\n\t\tlet currentOccupancyList = sortArrayByKey(currentOccupancyList__rowNum, 'isReservation', false);\r\n\t\tlet currentOccupancyNum = currentOccupancyList.reduce(function(prev, cur) {\r\n\t\t\treturn prev + cur.numberInParty;\r\n\t\t}, 0);\r\n\t\tlet statenum;\r\n\r\n\t\tif (isSubtract) {\r\n\t\t\tstatenum = currentOccupancyNum - num;\r\n\t\t} else {\r\n\t\t\tstatenum = currentOccupancyNum + num;\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tcurrentOccupancy : statenum\r\n\t\t});\r\n\t};\r\n\r\n\thandleUpdateStateNums = (parties) => {};\r\n\r\n\thandleSendToServer = () => {\r\n\t\tlet updatedParties = this.state.parties;\r\n\t\tthis.props.updateCatteryState([ ...updatedParties ]);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst modal = (\r\n\t\t\t<Modal click={this.handleModalToggle}>\r\n\t\t\t\t{!this.state.isEditMode ? (\r\n\t\t\t\t\t<AddUser handleAddParty={this.handleAddParty} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<EditParty\r\n\t\t\t\t\t\tpartyId={this.state.currentPartyId}\r\n\t\t\t\t\t\tupdatePartyData={this.updatePartyData}\r\n\t\t\t\t\t\thandleEditModalToggle={this.handleEditModalToggle}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Modal>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<Header\r\n\t\t\t\t\tparties={this.state.parties}\r\n\t\t\t\t\tcurrentTime={this.state.times.currentTime}\r\n\t\t\t\t\tcurrentOccupancy={this.state.currentOccupancy}\r\n\t\t\t\t\tcurrentNumOfUpcomingReservations={this.state.currentNumOfUpcomingReservations}\r\n\t\t\t\t\tcurrentNumOverdue={this.state.currentNumOverdue}\r\n\t\t\t\t\ttotalGuests={this.state.totalGuests}\r\n\t\t\t\t\thandleSendToServer={this.handleSendToServer}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"cattery-container\">\r\n\t\t\t\t\t{this.state.modalIsOpen ? modal : <AddPartyButton handleModalToggle={this.handleModalToggle} />}\r\n\t\t\t\t\t<div id=\"party-size-availability-col\">\r\n\t\t\t\t\t\t<PartySizeAvailability\r\n\t\t\t\t\t\t\tcurrentTime={this.state.times.currentTime}\r\n\t\t\t\t\t\t\tcurrentOccupancy={\r\n\t\t\t\t\t\t\t\tthis.state.currentOccupancy +\r\n\t\t\t\t\t\t\t\tthis.state.currentNumOfUpcomingReservations -\r\n\t\t\t\t\t\t\t\tthis.state.currentNumOverdue\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tparties={this.state.parties}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"cattery-body-col\">\r\n\t\t\t\t\t\t<ListOfParties\r\n\t\t\t\t\t\t\ttitle=\"Current Occupancy\"\r\n\t\t\t\t\t\t\tmodifyStateNum={this.modifyStateNum}\r\n\t\t\t\t\t\t\tcountDownSpeed={this.state.countDownSpeed}\r\n\t\t\t\t\t\t\tcurrentOccupancy={this.state.currentOccupancy}\r\n\t\t\t\t\t\t\tcurrentNumOfReservations={this.state.currentNumOfReservations}\r\n\t\t\t\t\t\t\tcurrentTime={this.state.times.currentTime}\r\n\t\t\t\t\t\t\thandleRemoveParty={this.handleRemoveParty}\r\n\t\t\t\t\t\t\thandleCheckReservation={this.handleCheckReservation}\r\n\t\t\t\t\t\t\thandleUpdateTimes={this.handleUpdateTimes}\r\n\t\t\t\t\t\t\tupdatePartyData={this.updatePartyData}\r\n\t\t\t\t\t\t\thandleEditModalToggle={this.handleEditModalToggle}\r\n\t\t\t\t\t\t\thandleAddParty={this.handleAddParty}\r\n\t\t\t\t\t\t\tparties={this.state.parties}\r\n\t\t\t\t\t\t\thandleMoveParty={this.handleMoveParty}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Cattery;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}